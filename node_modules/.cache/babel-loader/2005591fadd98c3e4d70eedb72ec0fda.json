{"ast":null,"code":"/**\n * Patched version of requestAnimationFrame that avoids ngzone\n * Use only when you know ngzone should not run\n */\nvar raf = function raf(h) {\n  if (typeof __zone_symbol__requestAnimationFrame === 'function') {\n    return __zone_symbol__requestAnimationFrame(h);\n  }\n\n  if (typeof requestAnimationFrame === 'function') {\n    return requestAnimationFrame(h);\n  }\n\n  return setTimeout(h);\n};\n\nvar hasShadowDom = function hasShadowDom(el) {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\n\nvar findItemLabel = function findItemLabel(componentEl) {\n  var itemEl = componentEl.closest('ion-item');\n\n  if (itemEl) {\n    return itemEl.querySelector('ion-label');\n  }\n\n  return null;\n};\n\nvar renderHiddenInput = function renderHiddenInput(always, container, name, value, disabled) {\n  if (always || hasShadowDom(container)) {\n    var input = container.querySelector('input.aux-input');\n\n    if (!input) {\n      input = container.ownerDocument.createElement('input');\n      input.type = 'hidden';\n      input.classList.add('aux-input');\n      container.appendChild(input);\n    }\n\n    input.disabled = disabled;\n    input.name = name;\n    input.value = value || '';\n  }\n};\n\nvar clamp = function clamp(min, n, max) {\n  return Math.max(min, Math.min(n, max));\n};\n\nvar assert = function assert(actual, reason) {\n  if (!actual) {\n    var message = 'ASSERT: ' + reason;\n    console.error(message);\n    debugger; // tslint:disable-line\n\n    throw new Error(message);\n  }\n};\n\nvar now = function now(ev) {\n  return ev.timeStamp || Date.now();\n};\n\nvar pointerCoord = function pointerCoord(ev) {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  if (ev) {\n    var changedTouches = ev.changedTouches;\n\n    if (changedTouches && changedTouches.length > 0) {\n      var touch = changedTouches[0];\n      return {\n        x: touch.clientX,\n        y: touch.clientY\n      };\n    }\n\n    if (ev.pageX !== undefined) {\n      return {\n        x: ev.pageX,\n        y: ev.pageY\n      };\n    }\n  }\n\n  return {\n    x: 0,\n    y: 0\n  };\n};\n/**\n * @hidden\n * Given a side, return if it should be on the end\n * based on the value of dir\n * @param side the side\n * @param isRTL whether the application dir is rtl\n */\n\n\nvar isEndSide = function isEndSide(side) {\n  var isRTL = document.dir === 'rtl';\n\n  switch (side) {\n    case 'start':\n      return isRTL;\n\n    case 'end':\n      return !isRTL;\n\n    default:\n      throw new Error(\"\\\"\".concat(side, \"\\\" is not a valid value for [side]. Use \\\"start\\\" or \\\"end\\\" instead.\"));\n  }\n};\n\nvar debounceEvent = function debounceEvent(event, wait) {\n  var original = event._original || event;\n  return {\n    _original: event,\n    emit: debounce(original.emit.bind(original), wait)\n  };\n};\n\nvar debounce = function debounce(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var timer;\n  return function () {\n    clearTimeout(timer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    timer = setTimeout.apply(void 0, [func, wait].concat(args));\n  };\n};\n\nexport { renderHiddenInput as a, assert as b, clamp as c, debounceEvent as d, debounce as e, findItemLabel as f, hasShadowDom as h, isEndSide as i, now as n, pointerCoord as p, raf as r };","map":{"version":3,"sources":["/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/@ionic/core/dist/esm-es5/helpers-d8b49b57.js"],"names":["raf","h","__zone_symbol__requestAnimationFrame","requestAnimationFrame","setTimeout","hasShadowDom","el","shadowRoot","attachShadow","findItemLabel","componentEl","itemEl","closest","querySelector","renderHiddenInput","always","container","name","value","disabled","input","ownerDocument","createElement","type","classList","add","appendChild","clamp","min","n","max","Math","assert","actual","reason","message","console","error","Error","now","ev","timeStamp","Date","pointerCoord","changedTouches","length","touch","x","clientX","y","clientY","pageX","undefined","pageY","isEndSide","side","isRTL","document","dir","debounceEvent","event","wait","original","_original","emit","debounce","bind","func","timer","clearTimeout","args","a","b","c","d","e","f","i","p","r"],"mappings":"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","sourcesContent":["/**\n * Patched version of requestAnimationFrame that avoids ngzone\n * Use only when you know ngzone should not run\n */\nconst raf = (h) => {\n    if (typeof __zone_symbol__requestAnimationFrame === 'function') {\n        return __zone_symbol__requestAnimationFrame(h);\n    }\n    if (typeof requestAnimationFrame === 'function') {\n        return requestAnimationFrame(h);\n    }\n    return setTimeout(h);\n};\nconst hasShadowDom = (el) => {\n    return !!el.shadowRoot && !!el.attachShadow;\n};\nconst findItemLabel = (componentEl) => {\n    const itemEl = componentEl.closest('ion-item');\n    if (itemEl) {\n        return itemEl.querySelector('ion-label');\n    }\n    return null;\n};\nconst renderHiddenInput = (always, container, name, value, disabled) => {\n    if (always || hasShadowDom(container)) {\n        let input = container.querySelector('input.aux-input');\n        if (!input) {\n            input = container.ownerDocument.createElement('input');\n            input.type = 'hidden';\n            input.classList.add('aux-input');\n            container.appendChild(input);\n        }\n        input.disabled = disabled;\n        input.name = name;\n        input.value = value || '';\n    }\n};\nconst clamp = (min, n, max) => {\n    return Math.max(min, Math.min(n, max));\n};\nconst assert = (actual, reason) => {\n    if (!actual) {\n        const message = 'ASSERT: ' + reason;\n        console.error(message);\n        debugger; // tslint:disable-line\n        throw new Error(message);\n    }\n};\nconst now = (ev) => {\n    return ev.timeStamp || Date.now();\n};\nconst pointerCoord = (ev) => {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    if (ev) {\n        const changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            const touch = changedTouches[0];\n            return { x: touch.clientX, y: touch.clientY };\n        }\n        if (ev.pageX !== undefined) {\n            return { x: ev.pageX, y: ev.pageY };\n        }\n    }\n    return { x: 0, y: 0 };\n};\n/**\n * @hidden\n * Given a side, return if it should be on the end\n * based on the value of dir\n * @param side the side\n * @param isRTL whether the application dir is rtl\n */\nconst isEndSide = (side) => {\n    const isRTL = document.dir === 'rtl';\n    switch (side) {\n        case 'start': return isRTL;\n        case 'end': return !isRTL;\n        default:\n            throw new Error(`\"${side}\" is not a valid value for [side]. Use \"start\" or \"end\" instead.`);\n    }\n};\nconst debounceEvent = (event, wait) => {\n    const original = event._original || event;\n    return {\n        _original: event,\n        emit: debounce(original.emit.bind(original), wait)\n    };\n};\nconst debounce = (func, wait = 0) => {\n    let timer;\n    return (...args) => {\n        clearTimeout(timer);\n        timer = setTimeout(func, wait, ...args);\n    };\n};\n\nexport { renderHiddenInput as a, assert as b, clamp as c, debounceEvent as d, debounce as e, findItemLabel as f, hasShadowDom as h, isEndSide as i, now as n, pointerCoord as p, raf as r };\n"]},"metadata":{},"sourceType":"module"}