{"ast":null,"code":"import _defineProperty from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { r as registerInstance, d as createEvent, w as writeTask, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { c as config, b as getIonMode } from './ionic-global-a175fa73.js';\nimport { p as pointerCoord } from './helpers-d8b49b57.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\nvar segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\nvar segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\n\nvar Segment = /*#__PURE__*/function () {\n  function Segment(hostRef) {\n    var _this = this;\n\n    _classCallCheck(this, Segment);\n\n    registerInstance(this, hostRef);\n    this.didInit = false;\n    this.activated = false;\n    /**\n     * If `true`, the user cannot interact with the segment.\n     */\n\n    this.disabled = false;\n    /**\n     * If `true`, the segment buttons will overflow and the user can swipe to see them.\n     * In addition, this will disable the gesture to drag the indicator between the buttons\n     * in order to swipe to see hidden buttons.\n     */\n\n    this.scrollable = false;\n\n    this.onClick = function (ev) {\n      var current = ev.target;\n      var previous = _this.checked;\n      _this.value = current.value;\n\n      if (previous && _this.scrollable) {\n        _this.checkButton(previous, current);\n      }\n\n      _this.checked = current;\n    };\n\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionSelect = createEvent(this, \"ionSelect\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n  }\n\n  _createClass(Segment, [{\n    key: \"valueChanged\",\n    value: function valueChanged(value, oldValue) {\n      this.ionSelect.emit({\n        value: value\n      });\n\n      if (oldValue !== '' || this.didInit) {\n        if (!this.activated) {\n          this.ionChange.emit({\n            value: value\n          });\n        } else {\n          this.valueAfterGesture = value;\n        }\n      }\n    }\n  }, {\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      this.gestureChanged();\n      var buttons = this.getButtons();\n\n      var _iterator = _createForOfIteratorHelper(buttons),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var button = _step.value;\n          button.disabled = this.disabled;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"gestureChanged\",\n    value: function gestureChanged() {\n      if (this.gesture && !this.scrollable) {\n        this.gesture.enable(!this.disabled);\n      }\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.emitStyle();\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.emitStyle();\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function () {\n      var _componentDidLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setCheckedClasses();\n                _context.next = 3;\n                return import('./index-e44ebcc6.js');\n\n              case 3:\n                this.gesture = _context.sent.createGesture({\n                  el: this.el,\n                  gestureName: 'segment',\n                  gesturePriority: 100,\n                  threshold: 0,\n                  passive: false,\n                  onStart: function onStart(ev) {\n                    return _this2.onStart(ev);\n                  },\n                  onMove: function onMove(ev) {\n                    return _this2.onMove(ev);\n                  },\n                  onEnd: function onEnd(ev) {\n                    return _this2.onEnd(ev);\n                  }\n                });\n                this.gesture.enable(!this.scrollable);\n                this.gestureChanged();\n\n                if (this.disabled) {\n                  this.disabledChanged();\n                }\n\n                this.didInit = true;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidLoad() {\n        return _componentDidLoad.apply(this, arguments);\n      }\n\n      return componentDidLoad;\n    }()\n  }, {\n    key: \"onStart\",\n    value: function onStart(detail) {\n      this.activate(detail);\n    }\n  }, {\n    key: \"onMove\",\n    value: function onMove(detail) {\n      this.setNextIndex(detail);\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(detail) {\n      this.setActivated(false);\n      var checkedValidButton = this.setNextIndex(detail, true);\n      detail.event.stopImmediatePropagation();\n\n      if (checkedValidButton) {\n        this.addRipple(detail);\n      }\n\n      var value = this.valueAfterGesture;\n\n      if (value !== undefined) {\n        this.ionChange.emit({\n          value: value\n        });\n        this.valueAfterGesture = undefined;\n      }\n    }\n  }, {\n    key: \"getButtons\",\n    value: function getButtons() {\n      return Array.from(this.el.querySelectorAll('ion-segment-button'));\n    }\n    /**\n     * The gesture blocks the segment button ripple. This\n     * function adds the ripple based on the checked segment\n     * and where the cursor ended.\n     */\n\n  }, {\n    key: \"addRipple\",\n    value: function addRipple(detail) {\n      var _this3 = this;\n\n      var useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n\n      if (!useRippleEffect) {\n        return;\n      }\n\n      var buttons = this.getButtons();\n      var checked = buttons.find(function (button) {\n        return button.value === _this3.value;\n      });\n      var root = checked.shadowRoot || checked;\n      var ripple = root.querySelector('ion-ripple-effect');\n\n      if (!ripple) {\n        return;\n      }\n\n      var _pointerCoord = pointerCoord(detail.event),\n          x = _pointerCoord.x,\n          y = _pointerCoord.y;\n\n      ripple.addRipple(x, y).then(function (remove) {\n        return remove();\n      });\n    }\n    /*\n     * Activate both the segment and the buttons\n     * due to a bug with ::slotted in Safari\n     */\n\n  }, {\n    key: \"setActivated\",\n    value: function setActivated(activated) {\n      var buttons = this.getButtons();\n      buttons.forEach(function (button) {\n        if (activated) {\n          button.classList.add('segment-button-activated');\n        } else {\n          button.classList.remove('segment-button-activated');\n        }\n      });\n      this.activated = activated;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(detail) {\n      var _this4 = this;\n\n      var clicked = detail.event.target;\n      var buttons = this.getButtons();\n      var checked = buttons.find(function (button) {\n        return button.value === _this4.value;\n      }); // Make sure we are only checking for activation on a segment button\n      // since disabled buttons will get the click on the segment\n\n      if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n        return;\n      } // If there are no checked buttons, set the current button to checked\n\n\n      if (!checked) {\n        this.value = clicked.value;\n      } // If the gesture began on the clicked button with the indicator\n      // then we should activate the indicator\n\n\n      if (this.value === clicked.value) {\n        this.setActivated(true);\n      }\n    }\n  }, {\n    key: \"getIndicator\",\n    value: function getIndicator(button) {\n      var root = button.shadowRoot || button;\n      return root.querySelector('.segment-button-indicator');\n    }\n  }, {\n    key: \"checkButton\",\n    value: function checkButton(previous, current) {\n      var previousIndicator = this.getIndicator(previous);\n      var currentIndicator = this.getIndicator(current);\n\n      if (previousIndicator === null || currentIndicator === null) {\n        return;\n      }\n\n      var previousClientRect = previousIndicator.getBoundingClientRect();\n      var currentClientRect = currentIndicator.getBoundingClientRect();\n      var widthDelta = previousClientRect.width / currentClientRect.width;\n      var xPosition = previousClientRect.left - currentClientRect.left; // Scale the indicator width to match the previous indicator width\n      // and translate it on top of the previous indicator\n\n      var transform = \"translate3d(\".concat(xPosition, \"px, 0, 0) scaleX(\").concat(widthDelta, \")\");\n      writeTask(function () {\n        // Remove the transition before positioning on top of the previous indicator\n        currentIndicator.classList.remove('segment-button-indicator-animated');\n        currentIndicator.style.setProperty('transform', transform); // Force a repaint to ensure the transform happens\n\n        currentIndicator.getBoundingClientRect(); // Add the transition to move the indicator into place\n\n        currentIndicator.classList.add('segment-button-indicator-animated'); // Remove the transform to slide the indicator back to the button clicked\n\n        currentIndicator.style.setProperty('transform', '');\n      });\n      this.value = current.value;\n      this.setCheckedClasses();\n    }\n  }, {\n    key: \"setCheckedClasses\",\n    value: function setCheckedClasses() {\n      var _this5 = this;\n\n      var buttons = this.getButtons();\n      var index = buttons.findIndex(function (button) {\n        return button.value === _this5.value;\n      });\n      var next = index + 1; // Keep track of the currently checked button\n\n      this.checked = buttons.find(function (button) {\n        return button.value === _this5.value;\n      });\n\n      var _iterator2 = _createForOfIteratorHelper(buttons),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var button = _step2.value;\n          button.classList.remove('segment-button-after-checked');\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (next < buttons.length) {\n        buttons[next].classList.add('segment-button-after-checked');\n      }\n    }\n  }, {\n    key: \"setNextIndex\",\n    value: function setNextIndex(detail) {\n      var _this6 = this;\n\n      var isEnd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var isRTL = document.dir === 'rtl';\n      var activated = this.activated;\n      var buttons = this.getButtons();\n      var index = buttons.findIndex(function (button) {\n        return button.value === _this6.value;\n      });\n      var previous = buttons[index];\n      var current;\n      var nextIndex;\n\n      if (index === -1) {\n        return;\n      } // Get the element that the touch event started on in case\n      // it was the checked button, then we will move the indicator\n\n\n      var rect = previous.getBoundingClientRect();\n      var left = rect.left;\n      var width = rect.width; // Get the element that the gesture is on top of based on the currentX of the\n      // gesture event and the Y coordinate of the starting element, since the gesture\n      // can move up and down off of the segment\n\n      var currentX = detail.currentX;\n      var previousY = rect.top + rect.height / 2;\n      var nextEl = document.elementFromPoint(currentX, previousY);\n      var decreaseIndex = isRTL ? currentX > left + width : currentX < left;\n      var increaseIndex = isRTL ? currentX < left : currentX > left + width; // If the indicator is currently activated then we have started the gesture\n      // on top of the checked button so we need to slide the indicator\n      // by checking the button next to it as we move\n\n      if (activated && !isEnd) {\n        // Decrease index, move left in LTR & right in RTL\n        if (decreaseIndex) {\n          var newIndex = index - 1;\n\n          if (newIndex >= 0) {\n            nextIndex = newIndex;\n          } // Increase index, moves right in LTR & left in RTL\n\n        } else if (increaseIndex) {\n          if (activated && !isEnd) {\n            var _newIndex = index + 1;\n\n            if (_newIndex < buttons.length) {\n              nextIndex = _newIndex;\n            }\n          }\n        }\n\n        if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n          current = buttons[nextIndex];\n        }\n      } // If the indicator is not activated then we will just set the indicator\n      // to the element where the gesture ended\n\n\n      if (!activated && isEnd) {\n        current = nextEl;\n      }\n      /* tslint:disable-next-line */\n\n\n      if (current != null) {\n        /**\n         * If current element is ion-segment then that means\n         * user tried to select a disabled ion-segment-button,\n         * and we should not update the ripple.\n         */\n        if (current.tagName === 'ION-SEGMENT') {\n          return false;\n        }\n\n        if (previous !== current) {\n          this.checkButton(previous, current);\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"emitStyle\",\n    value: function emitStyle() {\n      this.ionStyle.emit({\n        'segment': true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _Object$assign;\n\n      var mode = getIonMode(this);\n      return h(Host, {\n        onClick: this.onClick,\n        class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_Object$assign = {}, _defineProperty(_Object$assign, mode, true), _defineProperty(_Object$assign, 'in-toolbar', hostContext('ion-toolbar', this.el)), _defineProperty(_Object$assign, 'in-toolbar-color', hostContext('ion-toolbar[color]', this.el)), _defineProperty(_Object$assign, 'segment-activated', this.activated), _defineProperty(_Object$assign, 'segment-disabled', this.disabled), _defineProperty(_Object$assign, 'segment-scrollable', this.scrollable), _Object$assign))\n      }, h(\"slot\", null));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"value\": [\"valueChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n      };\n    }\n  }]);\n\n  return Segment;\n}();\n\nSegment.style = {\n  /*STENCIL:MODE:ios*/\n  ios: segmentIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: segmentMdCss\n};\nvar segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\nvar segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}.button-native{min-width:90px}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\nvar ids = 0;\n\nvar SegmentButton = /*#__PURE__*/function () {\n  function SegmentButton(hostRef) {\n    var _this7 = this;\n\n    _classCallCheck(this, SegmentButton);\n\n    registerInstance(this, hostRef);\n    this.segmentEl = null;\n    this.checked = false;\n    /**\n     * If `true`, the user cannot interact with the segment button.\n     */\n\n    this.disabled = false;\n    /**\n     * Set the layout of the text and icon in the segment.\n     */\n\n    this.layout = 'icon-top';\n    /**\n     * The type of the button.\n     */\n\n    this.type = 'button';\n    /**\n     * The value of the segment button.\n     */\n\n    this.value = 'ion-sb-' + ids++;\n\n    this.updateState = function () {\n      if (_this7.segmentEl) {\n        _this7.checked = _this7.segmentEl.value === _this7.value;\n      }\n    };\n  }\n\n  _createClass(SegmentButton, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      var segmentEl = this.segmentEl = this.el.closest('ion-segment');\n\n      if (segmentEl) {\n        this.updateState();\n        segmentEl.addEventListener('ionSelect', this.updateState);\n      }\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      var segmentEl = this.segmentEl;\n\n      if (segmentEl) {\n        segmentEl.removeEventListener('ionSelect', this.updateState);\n        this.segmentEl = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _class;\n\n      var checked = this.checked,\n          type = this.type,\n          disabled = this.disabled,\n          hasIcon = this.hasIcon,\n          hasLabel = this.hasLabel,\n          layout = this.layout;\n      var mode = getIonMode(this);\n      return h(Host, {\n        \"aria-disabled\": disabled ? 'true' : null,\n        class: (_class = {}, _defineProperty(_class, mode, true), _defineProperty(_class, 'in-toolbar', hostContext('ion-toolbar', this.el)), _defineProperty(_class, 'in-toolbar-color', hostContext('ion-toolbar[color]', this.el)), _defineProperty(_class, 'in-segment', hostContext('ion-segment', this.el)), _defineProperty(_class, 'in-segment-color', hostContext('ion-segment[color]', this.el)), _defineProperty(_class, 'segment-button-has-label', hasLabel), _defineProperty(_class, 'segment-button-has-icon', hasIcon), _defineProperty(_class, 'segment-button-has-label-only', hasLabel && !hasIcon), _defineProperty(_class, 'segment-button-has-icon-only', hasIcon && !hasLabel), _defineProperty(_class, 'segment-button-disabled', disabled), _defineProperty(_class, 'segment-button-checked', checked), _defineProperty(_class, \"segment-button-layout-\".concat(layout), true), _defineProperty(_class, 'ion-activatable', true), _defineProperty(_class, 'ion-activatable-instant', true), _defineProperty(_class, 'ion-focusable', true), _class)\n      }, h(\"button\", {\n        type: type,\n        \"aria-pressed\": checked ? 'true' : null,\n        class: \"button-native\",\n        disabled: disabled\n      }, h(\"span\", {\n        class: \"button-inner\"\n      }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", {\n        part: \"indicator\",\n        class: {\n          'segment-button-indicator': true,\n          'segment-button-indicator-animated': true\n        }\n      }, h(\"div\", {\n        part: \"indicator-background\",\n        class: \"segment-button-indicator-background\"\n      })));\n    }\n  }, {\n    key: \"hasLabel\",\n    get: function get() {\n      return !!this.el.querySelector('ion-label');\n    }\n  }, {\n    key: \"hasIcon\",\n    get: function get() {\n      return !!this.el.querySelector('ion-icon');\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return SegmentButton;\n}();\n\nSegmentButton.style = {\n  /*STENCIL:MODE:ios*/\n  ios: segmentButtonIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: segmentButtonMdCss\n};\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };","map":{"version":3,"sources":["/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/@ionic/core/dist/esm-es5/ion-segment_2-ios.entry.js"],"names":["r","registerInstance","d","createEvent","w","writeTask","h","H","Host","e","getElement","c","config","b","getIonMode","p","pointerCoord","createColorClasses","hostContext","segmentIosCss","segmentMdCss","Segment","hostRef","didInit","activated","disabled","scrollable","onClick","ev","current","target","previous","checked","value","checkButton","ionChange","ionSelect","ionStyle","oldValue","emit","valueAfterGesture","gestureChanged","buttons","getButtons","button","gesture","enable","emitStyle","setCheckedClasses","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","disabledChanged","detail","activate","setNextIndex","setActivated","checkedValidButton","event","stopImmediatePropagation","addRipple","undefined","Array","from","querySelectorAll","useRippleEffect","getBoolean","find","root","shadowRoot","ripple","querySelector","x","y","then","remove","forEach","classList","add","clicked","tagName","previousIndicator","getIndicator","currentIndicator","previousClientRect","getBoundingClientRect","currentClientRect","widthDelta","width","xPosition","left","transform","style","setProperty","index","findIndex","next","length","isEnd","isRTL","document","dir","nextIndex","rect","currentX","previousY","top","height","nextEl","elementFromPoint","decreaseIndex","increaseIndex","newIndex","mode","class","Object","assign","color","ios","md","segmentButtonIosCss","segmentButtonMdCss","ids","SegmentButton","segmentEl","layout","type","updateState","closest","addEventListener","removeEventListener","hasIcon","hasLabel","part","ion_segment","ion_segment_button"],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, w as writeTask, h, H as Host, e as getElement } from './index-2cd7e630.js';\nimport { c as config, b as getIonMode } from './ionic-global-a175fa73.js';\nimport { p as pointerCoord } from './helpers-d8b49b57.js';\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\n\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\n\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\n\nconst Segment = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.didInit = false;\n        this.activated = false;\n        /**\n         * If `true`, the user cannot interact with the segment.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the segment buttons will overflow and the user can swipe to see them.\n         * In addition, this will disable the gesture to drag the indicator between the buttons\n         * in order to swipe to see hidden buttons.\n         */\n        this.scrollable = false;\n        this.onClick = (ev) => {\n            const current = ev.target;\n            const previous = this.checked;\n            this.value = current.value;\n            if (previous && this.scrollable) {\n                this.checkButton(previous, current);\n            }\n            this.checked = current;\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    valueChanged(value, oldValue) {\n        this.ionSelect.emit({ value });\n        if (oldValue !== '' || this.didInit) {\n            if (!this.activated) {\n                this.ionChange.emit({ value });\n            }\n            else {\n                this.valueAfterGesture = value;\n            }\n        }\n    }\n    disabledChanged() {\n        this.gestureChanged();\n        const buttons = this.getButtons();\n        for (const button of buttons) {\n            button.disabled = this.disabled;\n        }\n    }\n    gestureChanged() {\n        if (this.gesture && !this.scrollable) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    connectedCallback() {\n        this.emitStyle();\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    async componentDidLoad() {\n        this.setCheckedClasses();\n        this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n            el: this.el,\n            gestureName: 'segment',\n            gesturePriority: 100,\n            threshold: 0,\n            passive: false,\n            onStart: ev => this.onStart(ev),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.gesture.enable(!this.scrollable);\n        this.gestureChanged();\n        if (this.disabled) {\n            this.disabledChanged();\n        }\n        this.didInit = true;\n    }\n    onStart(detail) {\n        this.activate(detail);\n    }\n    onMove(detail) {\n        this.setNextIndex(detail);\n    }\n    onEnd(detail) {\n        this.setActivated(false);\n        const checkedValidButton = this.setNextIndex(detail, true);\n        detail.event.stopImmediatePropagation();\n        if (checkedValidButton) {\n            this.addRipple(detail);\n        }\n        const value = this.valueAfterGesture;\n        if (value !== undefined) {\n            this.ionChange.emit({ value });\n            this.valueAfterGesture = undefined;\n        }\n    }\n    getButtons() {\n        return Array.from(this.el.querySelectorAll('ion-segment-button'));\n    }\n    /**\n     * The gesture blocks the segment button ripple. This\n     * function adds the ripple based on the checked segment\n     * and where the cursor ended.\n     */\n    addRipple(detail) {\n        const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n        if (!useRippleEffect) {\n            return;\n        }\n        const buttons = this.getButtons();\n        const checked = buttons.find(button => button.value === this.value);\n        const root = checked.shadowRoot || checked;\n        const ripple = root.querySelector('ion-ripple-effect');\n        if (!ripple) {\n            return;\n        }\n        const { x, y } = pointerCoord(detail.event);\n        ripple.addRipple(x, y).then(remove => remove());\n    }\n    /*\n     * Activate both the segment and the buttons\n     * due to a bug with ::slotted in Safari\n     */\n    setActivated(activated) {\n        const buttons = this.getButtons();\n        buttons.forEach(button => {\n            if (activated) {\n                button.classList.add('segment-button-activated');\n            }\n            else {\n                button.classList.remove('segment-button-activated');\n            }\n        });\n        this.activated = activated;\n    }\n    activate(detail) {\n        const clicked = detail.event.target;\n        const buttons = this.getButtons();\n        const checked = buttons.find(button => button.value === this.value);\n        // Make sure we are only checking for activation on a segment button\n        // since disabled buttons will get the click on the segment\n        if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n            return;\n        }\n        // If there are no checked buttons, set the current button to checked\n        if (!checked) {\n            this.value = clicked.value;\n        }\n        // If the gesture began on the clicked button with the indicator\n        // then we should activate the indicator\n        if (this.value === clicked.value) {\n            this.setActivated(true);\n        }\n    }\n    getIndicator(button) {\n        const root = button.shadowRoot || button;\n        return root.querySelector('.segment-button-indicator');\n    }\n    checkButton(previous, current) {\n        const previousIndicator = this.getIndicator(previous);\n        const currentIndicator = this.getIndicator(current);\n        if (previousIndicator === null || currentIndicator === null) {\n            return;\n        }\n        const previousClientRect = previousIndicator.getBoundingClientRect();\n        const currentClientRect = currentIndicator.getBoundingClientRect();\n        const widthDelta = previousClientRect.width / currentClientRect.width;\n        const xPosition = previousClientRect.left - currentClientRect.left;\n        // Scale the indicator width to match the previous indicator width\n        // and translate it on top of the previous indicator\n        const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\n        writeTask(() => {\n            // Remove the transition before positioning on top of the previous indicator\n            currentIndicator.classList.remove('segment-button-indicator-animated');\n            currentIndicator.style.setProperty('transform', transform);\n            // Force a repaint to ensure the transform happens\n            currentIndicator.getBoundingClientRect();\n            // Add the transition to move the indicator into place\n            currentIndicator.classList.add('segment-button-indicator-animated');\n            // Remove the transform to slide the indicator back to the button clicked\n            currentIndicator.style.setProperty('transform', '');\n        });\n        this.value = current.value;\n        this.setCheckedClasses();\n    }\n    setCheckedClasses() {\n        const buttons = this.getButtons();\n        const index = buttons.findIndex(button => button.value === this.value);\n        const next = index + 1;\n        // Keep track of the currently checked button\n        this.checked = buttons.find(button => button.value === this.value);\n        for (const button of buttons) {\n            button.classList.remove('segment-button-after-checked');\n        }\n        if (next < buttons.length) {\n            buttons[next].classList.add('segment-button-after-checked');\n        }\n    }\n    setNextIndex(detail, isEnd = false) {\n        const isRTL = document.dir === 'rtl';\n        const activated = this.activated;\n        const buttons = this.getButtons();\n        const index = buttons.findIndex(button => button.value === this.value);\n        const previous = buttons[index];\n        let current;\n        let nextIndex;\n        if (index === -1) {\n            return;\n        }\n        // Get the element that the touch event started on in case\n        // it was the checked button, then we will move the indicator\n        const rect = previous.getBoundingClientRect();\n        const left = rect.left;\n        const width = rect.width;\n        // Get the element that the gesture is on top of based on the currentX of the\n        // gesture event and the Y coordinate of the starting element, since the gesture\n        // can move up and down off of the segment\n        const currentX = detail.currentX;\n        const previousY = rect.top + (rect.height / 2);\n        const nextEl = document.elementFromPoint(currentX, previousY);\n        const decreaseIndex = isRTL ? currentX > (left + width) : currentX < left;\n        const increaseIndex = isRTL ? currentX < left : currentX > (left + width);\n        // If the indicator is currently activated then we have started the gesture\n        // on top of the checked button so we need to slide the indicator\n        // by checking the button next to it as we move\n        if (activated && !isEnd) {\n            // Decrease index, move left in LTR & right in RTL\n            if (decreaseIndex) {\n                const newIndex = index - 1;\n                if (newIndex >= 0) {\n                    nextIndex = newIndex;\n                }\n                // Increase index, moves right in LTR & left in RTL\n            }\n            else if (increaseIndex) {\n                if (activated && !isEnd) {\n                    const newIndex = index + 1;\n                    if (newIndex < buttons.length) {\n                        nextIndex = newIndex;\n                    }\n                }\n            }\n            if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n                current = buttons[nextIndex];\n            }\n        }\n        // If the indicator is not activated then we will just set the indicator\n        // to the element where the gesture ended\n        if (!activated && isEnd) {\n            current = nextEl;\n        }\n        /* tslint:disable-next-line */\n        if (current != null) {\n            /**\n             * If current element is ion-segment then that means\n             * user tried to select a disabled ion-segment-button,\n             * and we should not update the ripple.\n             */\n            if (current.tagName === 'ION-SEGMENT') {\n                return false;\n            }\n            if (previous !== current) {\n                this.checkButton(previous, current);\n            }\n        }\n        return true;\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'segment': true\n        });\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'in-toolbar': hostContext('ion-toolbar', this.el), 'in-toolbar-color': hostContext('ion-toolbar[color]', this.el), 'segment-activated': this.activated, 'segment-disabled': this.disabled, 'segment-scrollable': this.scrollable }) }, h(\"slot\", null)));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"value\": [\"valueChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nSegment.style = {\n    /*STENCIL:MODE:ios*/ ios: segmentIosCss,\n    /*STENCIL:MODE:md*/ md: segmentMdCss\n};\n\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\n\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}.button-native{min-width:90px}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\n\nlet ids = 0;\nconst SegmentButton = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.segmentEl = null;\n        this.checked = false;\n        /**\n         * If `true`, the user cannot interact with the segment button.\n         */\n        this.disabled = false;\n        /**\n         * Set the layout of the text and icon in the segment.\n         */\n        this.layout = 'icon-top';\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        /**\n         * The value of the segment button.\n         */\n        this.value = 'ion-sb-' + (ids++);\n        this.updateState = () => {\n            if (this.segmentEl) {\n                this.checked = this.segmentEl.value === this.value;\n            }\n        };\n    }\n    connectedCallback() {\n        const segmentEl = this.segmentEl = this.el.closest('ion-segment');\n        if (segmentEl) {\n            this.updateState();\n            segmentEl.addEventListener('ionSelect', this.updateState);\n        }\n    }\n    disconnectedCallback() {\n        const segmentEl = this.segmentEl;\n        if (segmentEl) {\n            segmentEl.removeEventListener('ionSelect', this.updateState);\n            this.segmentEl = null;\n        }\n    }\n    get hasLabel() {\n        return !!this.el.querySelector('ion-label');\n    }\n    get hasIcon() {\n        return !!this.el.querySelector('ion-icon');\n    }\n    render() {\n        const { checked, type, disabled, hasIcon, hasLabel, layout } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, class: {\n                [mode]: true,\n                'in-toolbar': hostContext('ion-toolbar', this.el),\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n                'in-segment': hostContext('ion-segment', this.el),\n                'in-segment-color': hostContext('ion-segment[color]', this.el),\n                'segment-button-has-label': hasLabel,\n                'segment-button-has-icon': hasIcon,\n                'segment-button-has-label-only': hasLabel && !hasIcon,\n                'segment-button-has-icon-only': hasIcon && !hasLabel,\n                'segment-button-disabled': disabled,\n                'segment-button-checked': checked,\n                [`segment-button-layout-${layout}`]: true,\n                'ion-activatable': true,\n                'ion-activatable-instant': true,\n                'ion-focusable': true,\n            } }, h(\"button\", { type: type, \"aria-pressed\": checked ? 'true' : null, class: \"button-native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\n                'segment-button-indicator': true,\n                'segment-button-indicator-animated': true\n            } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\n    }\n    get el() { return getElement(this); }\n};\nSegmentButton.style = {\n    /*STENCIL:MODE:ios*/ ios: segmentButtonIosCss,\n    /*STENCIL:MODE:md*/ md: segmentButtonMdCss\n};\n\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\n"]},"metadata":{},"sourceType":"module"}