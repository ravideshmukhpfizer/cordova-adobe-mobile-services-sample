{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar GestureController = /*#__PURE__*/function () {\n  function GestureController() {\n    _classCallCheck(this, GestureController);\n\n    this.gestureId = 0;\n    this.requestedStart = new Map();\n    this.disabledGestures = new Map();\n    this.disabledScroll = new Set();\n  }\n  /**\n   * Creates a gesture delegate based on the GestureConfig passed\n   */\n\n\n  _createClass(GestureController, [{\n    key: \"createGesture\",\n    value: function createGesture(config) {\n      return new GestureDelegate(this, this.newID(), config.name, config.priority || 0, !!config.disableScroll);\n    }\n    /**\n     * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n     */\n\n  }, {\n    key: \"createBlocker\",\n    value: function createBlocker() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n    }\n  }, {\n    key: \"start\",\n    value: function start(gestureName, id, priority) {\n      if (!this.canStart(gestureName)) {\n        this.requestedStart.delete(id);\n        return false;\n      }\n\n      this.requestedStart.set(id, priority);\n      return true;\n    }\n  }, {\n    key: \"capture\",\n    value: function capture(gestureName, id, priority) {\n      if (!this.start(gestureName, id, priority)) {\n        return false;\n      }\n\n      var requestedStart = this.requestedStart;\n      var maxPriority = -10000;\n      requestedStart.forEach(function (value) {\n        maxPriority = Math.max(maxPriority, value);\n      });\n\n      if (maxPriority === priority) {\n        this.capturedId = id;\n        requestedStart.clear();\n        var event = new CustomEvent('ionGestureCaptured', {\n          detail: {\n            gestureName: gestureName\n          }\n        });\n        document.dispatchEvent(event);\n        return true;\n      }\n\n      requestedStart.delete(id);\n      return false;\n    }\n  }, {\n    key: \"release\",\n    value: function release(id) {\n      this.requestedStart.delete(id);\n\n      if (this.capturedId === id) {\n        this.capturedId = undefined;\n      }\n    }\n  }, {\n    key: \"disableGesture\",\n    value: function disableGesture(gestureName, id) {\n      var set = this.disabledGestures.get(gestureName);\n\n      if (set === undefined) {\n        set = new Set();\n        this.disabledGestures.set(gestureName, set);\n      }\n\n      set.add(id);\n    }\n  }, {\n    key: \"enableGesture\",\n    value: function enableGesture(gestureName, id) {\n      var set = this.disabledGestures.get(gestureName);\n\n      if (set !== undefined) {\n        set.delete(id);\n      }\n    }\n  }, {\n    key: \"disableScroll\",\n    value: function disableScroll(id) {\n      this.disabledScroll.add(id);\n\n      if (this.disabledScroll.size === 1) {\n        document.body.classList.add(BACKDROP_NO_SCROLL);\n      }\n    }\n  }, {\n    key: \"enableScroll\",\n    value: function enableScroll(id) {\n      this.disabledScroll.delete(id);\n\n      if (this.disabledScroll.size === 0) {\n        document.body.classList.remove(BACKDROP_NO_SCROLL);\n      }\n    }\n  }, {\n    key: \"canStart\",\n    value: function canStart(gestureName) {\n      if (this.capturedId !== undefined) {\n        // a gesture already captured\n        return false;\n      }\n\n      if (this.isDisabled(gestureName)) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"isCaptured\",\n    value: function isCaptured() {\n      return this.capturedId !== undefined;\n    }\n  }, {\n    key: \"isScrollDisabled\",\n    value: function isScrollDisabled() {\n      return this.disabledScroll.size > 0;\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled(gestureName) {\n      var disabled = this.disabledGestures.get(gestureName);\n\n      if (disabled && disabled.size > 0) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"newID\",\n    value: function newID() {\n      this.gestureId++;\n      return this.gestureId;\n    }\n  }]);\n\n  return GestureController;\n}();\n\nvar GestureDelegate = /*#__PURE__*/function () {\n  function GestureDelegate(ctrl, id, name, priority, disableScroll) {\n    _classCallCheck(this, GestureDelegate);\n\n    this.id = id;\n    this.name = name;\n    this.disableScroll = disableScroll;\n    this.priority = priority * 1000000 + id;\n    this.ctrl = ctrl;\n  }\n\n  _createClass(GestureDelegate, [{\n    key: \"canStart\",\n    value: function canStart() {\n      if (!this.ctrl) {\n        return false;\n      }\n\n      return this.ctrl.canStart(this.name);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (!this.ctrl) {\n        return false;\n      }\n\n      return this.ctrl.start(this.name, this.id, this.priority);\n    }\n  }, {\n    key: \"capture\",\n    value: function capture() {\n      if (!this.ctrl) {\n        return false;\n      }\n\n      var captured = this.ctrl.capture(this.name, this.id, this.priority);\n\n      if (captured && this.disableScroll) {\n        this.ctrl.disableScroll(this.id);\n      }\n\n      return captured;\n    }\n  }, {\n    key: \"release\",\n    value: function release() {\n      if (this.ctrl) {\n        this.ctrl.release(this.id);\n\n        if (this.disableScroll) {\n          this.ctrl.enableScroll(this.id);\n        }\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.release();\n      this.ctrl = undefined;\n    }\n  }]);\n\n  return GestureDelegate;\n}();\n\nvar BlockerDelegate = /*#__PURE__*/function () {\n  function BlockerDelegate(ctrl, id, disable, disableScroll) {\n    _classCallCheck(this, BlockerDelegate);\n\n    this.id = id;\n    this.disable = disable;\n    this.disableScroll = disableScroll;\n    this.ctrl = ctrl;\n  }\n\n  _createClass(BlockerDelegate, [{\n    key: \"block\",\n    value: function block() {\n      if (!this.ctrl) {\n        return;\n      }\n\n      if (this.disable) {\n        var _iterator = _createForOfIteratorHelper(this.disable),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var gesture = _step.value;\n            this.ctrl.disableGesture(gesture, this.id);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      if (this.disableScroll) {\n        this.ctrl.disableScroll(this.id);\n      }\n    }\n  }, {\n    key: \"unblock\",\n    value: function unblock() {\n      if (!this.ctrl) {\n        return;\n      }\n\n      if (this.disable) {\n        var _iterator2 = _createForOfIteratorHelper(this.disable),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var gesture = _step2.value;\n            this.ctrl.enableGesture(gesture, this.id);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      if (this.disableScroll) {\n        this.ctrl.enableScroll(this.id);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.unblock();\n      this.ctrl = undefined;\n    }\n  }]);\n\n  return BlockerDelegate;\n}();\n\nvar BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nvar GESTURE_CONTROLLER = new GestureController();\n\nvar addEventListener = function addEventListener(el, eventName, callback, opts) {\n  // use event listener options when supported\n  // otherwise it's just a boolean for the \"capture\" arg\n  var listenerOpts = supportsPassive(el) ? {\n    'capture': !!opts.capture,\n    'passive': !!opts.passive\n  } : !!opts.capture;\n  var add;\n  var remove;\n\n  if (el['__zone_symbol__addEventListener']) {\n    add = '__zone_symbol__addEventListener';\n    remove = '__zone_symbol__removeEventListener';\n  } else {\n    add = 'addEventListener';\n    remove = 'removeEventListener';\n  }\n\n  el[add](eventName, callback, listenerOpts);\n  return function () {\n    el[remove](eventName, callback, listenerOpts);\n  };\n};\n\nvar supportsPassive = function supportsPassive(node) {\n  if (_sPassive === undefined) {\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          _sPassive = true;\n        }\n      });\n      node.addEventListener('optsTest', function () {\n        return;\n      }, opts);\n    } catch (e) {\n      _sPassive = false;\n    }\n  }\n\n  return !!_sPassive;\n};\n\nvar _sPassive;\n\nvar MOUSE_WAIT = 2000;\n\nvar createPointerEvents = function createPointerEvents(el, pointerDown, pointerMove, pointerUp, options) {\n  var rmTouchStart;\n  var rmTouchMove;\n  var rmTouchEnd;\n  var rmTouchCancel;\n  var rmMouseStart;\n  var rmMouseMove;\n  var rmMouseUp;\n  var lastTouchEvent = 0;\n\n  var handleTouchStart = function handleTouchStart(ev) {\n    lastTouchEvent = Date.now() + MOUSE_WAIT;\n\n    if (!pointerDown(ev)) {\n      return;\n    }\n\n    if (!rmTouchMove && pointerMove) {\n      rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n    }\n\n    if (!rmTouchEnd) {\n      rmTouchEnd = addEventListener(el, 'touchend', handleTouchEnd, options);\n    }\n\n    if (!rmTouchCancel) {\n      rmTouchCancel = addEventListener(el, 'touchcancel', handleTouchEnd, options);\n    }\n  };\n\n  var handleMouseDown = function handleMouseDown(ev) {\n    if (lastTouchEvent > Date.now()) {\n      return;\n    }\n\n    if (!pointerDown(ev)) {\n      return;\n    }\n\n    if (!rmMouseMove && pointerMove) {\n      rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n    }\n\n    if (!rmMouseUp) {\n      rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n    }\n  };\n\n  var handleTouchEnd = function handleTouchEnd(ev) {\n    stopTouch();\n\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n\n  var handleMouseUp = function handleMouseUp(ev) {\n    stopMouse();\n\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n\n  var stopTouch = function stopTouch() {\n    if (rmTouchMove) {\n      rmTouchMove();\n    }\n\n    if (rmTouchEnd) {\n      rmTouchEnd();\n    }\n\n    if (rmTouchCancel) {\n      rmTouchCancel();\n    }\n\n    rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n  };\n\n  var stopMouse = function stopMouse() {\n    if (rmMouseMove) {\n      rmMouseMove();\n    }\n\n    if (rmMouseUp) {\n      rmMouseUp();\n    }\n\n    rmMouseMove = rmMouseUp = undefined;\n  };\n\n  var stop = function stop() {\n    stopTouch();\n    stopMouse();\n  };\n\n  var enable = function enable() {\n    var isEnabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    if (!isEnabled) {\n      if (rmTouchStart) {\n        rmTouchStart();\n      }\n\n      if (rmMouseStart) {\n        rmMouseStart();\n      }\n\n      rmTouchStart = rmMouseStart = undefined;\n      stop();\n    } else {\n      if (!rmTouchStart) {\n        rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n      }\n\n      if (!rmMouseStart) {\n        rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n      }\n    }\n  };\n\n  var destroy = function destroy() {\n    enable(false);\n    pointerUp = pointerMove = pointerDown = undefined;\n  };\n\n  return {\n    enable: enable,\n    stop: stop,\n    destroy: destroy\n  };\n};\n\nvar getDocument = function getDocument(node) {\n  return node instanceof Document ? node : node.ownerDocument;\n};\n\nvar createPanRecognizer = function createPanRecognizer(direction, thresh, maxAngle) {\n  var radians = maxAngle * (Math.PI / 180);\n  var isDirX = direction === 'x';\n  var maxCosine = Math.cos(radians);\n  var threshold = thresh * thresh;\n  var startX = 0;\n  var startY = 0;\n  var dirty = false;\n  var isPan = 0;\n  return {\n    start: function start(x, y) {\n      startX = x;\n      startY = y;\n      isPan = 0;\n      dirty = true;\n    },\n    detect: function detect(x, y) {\n      if (!dirty) {\n        return false;\n      }\n\n      var deltaX = x - startX;\n      var deltaY = y - startY;\n      var distance = deltaX * deltaX + deltaY * deltaY;\n\n      if (distance < threshold) {\n        return false;\n      }\n\n      var hypotenuse = Math.sqrt(distance);\n      var cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n\n      if (cosine > maxCosine) {\n        isPan = 1;\n      } else if (cosine < -maxCosine) {\n        isPan = -1;\n      } else {\n        isPan = 0;\n      }\n\n      dirty = false;\n      return true;\n    },\n    isGesture: function isGesture() {\n      return isPan !== 0;\n    },\n    getDirection: function getDirection() {\n      return isPan;\n    }\n  };\n};\n\nvar createGesture = function createGesture(config) {\n  var hasCapturedPan = false;\n  var hasStartedPan = false;\n  var hasFiredStart = true;\n  var isMoveQueued = false;\n  var finalConfig = Object.assign({\n    disableScroll: false,\n    direction: 'x',\n    gesturePriority: 0,\n    passive: true,\n    maxAngle: 40,\n    threshold: 10\n  }, config);\n  var canStart = finalConfig.canStart;\n  var onWillStart = finalConfig.onWillStart;\n  var onStart = finalConfig.onStart;\n  var onEnd = finalConfig.onEnd;\n  var notCaptured = finalConfig.notCaptured;\n  var onMove = finalConfig.onMove;\n  var threshold = finalConfig.threshold;\n  var detail = {\n    type: 'pan',\n    startX: 0,\n    startY: 0,\n    startTime: 0,\n    currentX: 0,\n    currentY: 0,\n    velocityX: 0,\n    velocityY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    currentTime: 0,\n    event: undefined,\n    data: undefined\n  };\n  var pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n  var gesture = GESTURE_CONTROLLER.createGesture({\n    name: config.gestureName,\n    priority: config.gesturePriority,\n    disableScroll: config.disableScroll\n  });\n\n  var pointerDown = function pointerDown(ev) {\n    var timeStamp = now(ev);\n\n    if (hasStartedPan || !hasFiredStart) {\n      return false;\n    }\n\n    updateDetail(ev, detail);\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime = timeStamp;\n    detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n    detail.event = ev; // Check if gesture can start\n\n    if (canStart && canStart(detail) === false) {\n      return false;\n    } // Release fallback\n\n\n    gesture.release(); // Start gesture\n\n    if (!gesture.start()) {\n      return false;\n    }\n\n    hasStartedPan = true;\n\n    if (threshold === 0) {\n      return tryToCapturePan();\n    }\n\n    pan.start(detail.startX, detail.startY);\n    return true;\n  };\n\n  var pointerMove = function pointerMove(ev) {\n    // fast path, if gesture is currently captured\n    // do minimum job to get user-land even dispatched\n    if (hasCapturedPan) {\n      if (!isMoveQueued && hasFiredStart) {\n        isMoveQueued = true;\n        calcGestureData(detail, ev);\n        requestAnimationFrame(fireOnMove);\n      }\n\n      return;\n    } // gesture is currently being detected\n\n\n    calcGestureData(detail, ev);\n\n    if (pan.detect(detail.currentX, detail.currentY)) {\n      if (!pan.isGesture() || !tryToCapturePan()) {\n        abortGesture();\n      }\n    }\n  };\n\n  var fireOnMove = function fireOnMove() {\n    // Since fireOnMove is called inside a RAF, onEnd() might be called,\n    // we must double check hasCapturedPan\n    if (!hasCapturedPan) {\n      return;\n    }\n\n    isMoveQueued = false;\n\n    if (onMove) {\n      onMove(detail);\n    }\n  };\n\n  var tryToCapturePan = function tryToCapturePan() {\n    if (gesture && !gesture.capture()) {\n      return false;\n    }\n\n    hasCapturedPan = true;\n    hasFiredStart = false; // reset start position since the real user-land event starts here\n    // If the pan detector threshold is big, not resetting the start position\n    // will cause a jump in the animation equal to the detector threshold.\n    // the array of positions used to calculate the gesture velocity does not\n    // need to be cleaned, more points in the positions array always results in a\n    // more accurate value of the velocity.\n\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime;\n\n    if (onWillStart) {\n      onWillStart(detail).then(fireOnStart);\n    } else {\n      fireOnStart();\n    }\n\n    return true;\n  };\n\n  var fireOnStart = function fireOnStart() {\n    if (onStart) {\n      onStart(detail);\n    }\n\n    hasFiredStart = true;\n  };\n\n  var reset = function reset() {\n    hasCapturedPan = false;\n    hasStartedPan = false;\n    isMoveQueued = false;\n    hasFiredStart = true;\n    gesture.release();\n  }; // END *************************\n\n\n  var pointerUp = function pointerUp(ev) {\n    var tmpHasCaptured = hasCapturedPan;\n    var tmpHasFiredStart = hasFiredStart;\n    reset();\n\n    if (!tmpHasFiredStart) {\n      return;\n    }\n\n    calcGestureData(detail, ev); // Try to capture press\n\n    if (tmpHasCaptured) {\n      if (onEnd) {\n        onEnd(detail);\n      }\n\n      return;\n    } // Not captured any event\n\n\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n\n  var pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n    capture: false\n  });\n\n  var abortGesture = function abortGesture() {\n    reset();\n    pointerEvents.stop();\n\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n\n  return {\n    enable: function enable() {\n      var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      if (!enable) {\n        if (hasCapturedPan) {\n          pointerUp(undefined);\n        }\n\n        reset();\n      }\n\n      pointerEvents.enable(enable);\n    },\n    destroy: function destroy() {\n      gesture.destroy();\n      pointerEvents.destroy();\n    }\n  };\n};\n\nvar calcGestureData = function calcGestureData(detail, ev) {\n  if (!ev) {\n    return;\n  }\n\n  var prevX = detail.currentX;\n  var prevY = detail.currentY;\n  var prevT = detail.currentTime;\n  updateDetail(ev, detail);\n  var currentX = detail.currentX;\n  var currentY = detail.currentY;\n  var timestamp = detail.currentTime = now(ev);\n  var timeDelta = timestamp - prevT;\n\n  if (timeDelta > 0 && timeDelta < 100) {\n    var velocityX = (currentX - prevX) / timeDelta;\n    var velocityY = (currentY - prevY) / timeDelta;\n    detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n    detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n  }\n\n  detail.deltaX = currentX - detail.startX;\n  detail.deltaY = currentY - detail.startY;\n  detail.event = ev;\n};\n\nvar updateDetail = function updateDetail(ev, detail) {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  var x = 0;\n  var y = 0;\n\n  if (ev) {\n    var changedTouches = ev.changedTouches;\n\n    if (changedTouches && changedTouches.length > 0) {\n      var touch = changedTouches[0];\n      x = touch.clientX;\n      y = touch.clientY;\n    } else if (ev.pageX !== undefined) {\n      x = ev.pageX;\n      y = ev.pageY;\n    }\n  }\n\n  detail.currentX = x;\n  detail.currentY = y;\n};\n\nvar now = function now(ev) {\n  return ev.timeStamp || Date.now();\n};\n\nexport { GESTURE_CONTROLLER, createGesture };","map":{"version":3,"sources":["/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/@ionic/core/dist/esm-es5/index-e44ebcc6.js"],"names":["GestureController","gestureId","requestedStart","Map","disabledGestures","disabledScroll","Set","config","GestureDelegate","newID","name","priority","disableScroll","opts","BlockerDelegate","disable","gestureName","id","canStart","delete","set","start","maxPriority","forEach","value","Math","max","capturedId","clear","event","CustomEvent","detail","document","dispatchEvent","undefined","get","add","size","body","classList","BACKDROP_NO_SCROLL","remove","isDisabled","disabled","ctrl","captured","capture","release","enableScroll","gesture","disableGesture","enableGesture","unblock","GESTURE_CONTROLLER","addEventListener","el","eventName","callback","listenerOpts","supportsPassive","passive","node","_sPassive","Object","defineProperty","e","MOUSE_WAIT","createPointerEvents","pointerDown","pointerMove","pointerUp","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","ev","Date","now","handleTouchEnd","handleMouseDown","getDocument","handleMouseUp","stopTouch","stopMouse","stop","enable","isEnabled","destroy","Document","ownerDocument","createPanRecognizer","direction","thresh","maxAngle","radians","PI","isDirX","maxCosine","cos","threshold","startX","startY","dirty","isPan","x","y","detect","deltaX","deltaY","distance","hypotenuse","sqrt","cosine","isGesture","getDirection","createGesture","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","assign","gesturePriority","onWillStart","onStart","onEnd","notCaptured","onMove","type","startTime","currentX","currentY","velocityX","velocityY","currentTime","data","pan","timeStamp","updateDetail","tryToCapturePan","calcGestureData","requestAnimationFrame","fireOnMove","abortGesture","then","fireOnStart","reset","tmpHasCaptured","tmpHasFiredStart","pointerEvents","prevX","prevY","prevT","timestamp","timeDelta","changedTouches","length","touch","clientX","clientY","pageX","pageY"],"mappings":"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","sourcesContent":["class GestureController {\n    constructor() {\n        this.gestureId = 0;\n        this.requestedStart = new Map();\n        this.disabledGestures = new Map();\n        this.disabledScroll = new Set();\n    }\n    /**\n     * Creates a gesture delegate based on the GestureConfig passed\n     */\n    createGesture(config) {\n        return new GestureDelegate(this, this.newID(), config.name, config.priority || 0, !!config.disableScroll);\n    }\n    /**\n     * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n     */\n    createBlocker(opts = {}) {\n        return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n    }\n    start(gestureName, id, priority) {\n        if (!this.canStart(gestureName)) {\n            this.requestedStart.delete(id);\n            return false;\n        }\n        this.requestedStart.set(id, priority);\n        return true;\n    }\n    capture(gestureName, id, priority) {\n        if (!this.start(gestureName, id, priority)) {\n            return false;\n        }\n        const requestedStart = this.requestedStart;\n        let maxPriority = -10000;\n        requestedStart.forEach(value => {\n            maxPriority = Math.max(maxPriority, value);\n        });\n        if (maxPriority === priority) {\n            this.capturedId = id;\n            requestedStart.clear();\n            const event = new CustomEvent('ionGestureCaptured', { detail: { gestureName } });\n            document.dispatchEvent(event);\n            return true;\n        }\n        requestedStart.delete(id);\n        return false;\n    }\n    release(id) {\n        this.requestedStart.delete(id);\n        if (this.capturedId === id) {\n            this.capturedId = undefined;\n        }\n    }\n    disableGesture(gestureName, id) {\n        let set = this.disabledGestures.get(gestureName);\n        if (set === undefined) {\n            set = new Set();\n            this.disabledGestures.set(gestureName, set);\n        }\n        set.add(id);\n    }\n    enableGesture(gestureName, id) {\n        const set = this.disabledGestures.get(gestureName);\n        if (set !== undefined) {\n            set.delete(id);\n        }\n    }\n    disableScroll(id) {\n        this.disabledScroll.add(id);\n        if (this.disabledScroll.size === 1) {\n            document.body.classList.add(BACKDROP_NO_SCROLL);\n        }\n    }\n    enableScroll(id) {\n        this.disabledScroll.delete(id);\n        if (this.disabledScroll.size === 0) {\n            document.body.classList.remove(BACKDROP_NO_SCROLL);\n        }\n    }\n    canStart(gestureName) {\n        if (this.capturedId !== undefined) {\n            // a gesture already captured\n            return false;\n        }\n        if (this.isDisabled(gestureName)) {\n            return false;\n        }\n        return true;\n    }\n    isCaptured() {\n        return this.capturedId !== undefined;\n    }\n    isScrollDisabled() {\n        return this.disabledScroll.size > 0;\n    }\n    isDisabled(gestureName) {\n        const disabled = this.disabledGestures.get(gestureName);\n        if (disabled && disabled.size > 0) {\n            return true;\n        }\n        return false;\n    }\n    newID() {\n        this.gestureId++;\n        return this.gestureId;\n    }\n}\nclass GestureDelegate {\n    constructor(ctrl, id, name, priority, disableScroll) {\n        this.id = id;\n        this.name = name;\n        this.disableScroll = disableScroll;\n        this.priority = priority * 1000000 + id;\n        this.ctrl = ctrl;\n    }\n    canStart() {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.canStart(this.name);\n    }\n    start() {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.start(this.name, this.id, this.priority);\n    }\n    capture() {\n        if (!this.ctrl) {\n            return false;\n        }\n        const captured = this.ctrl.capture(this.name, this.id, this.priority);\n        if (captured && this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n        return captured;\n    }\n    release() {\n        if (this.ctrl) {\n            this.ctrl.release(this.id);\n            if (this.disableScroll) {\n                this.ctrl.enableScroll(this.id);\n            }\n        }\n    }\n    destroy() {\n        this.release();\n        this.ctrl = undefined;\n    }\n}\nclass BlockerDelegate {\n    constructor(ctrl, id, disable, disableScroll) {\n        this.id = id;\n        this.disable = disable;\n        this.disableScroll = disableScroll;\n        this.ctrl = ctrl;\n    }\n    block() {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (const gesture of this.disable) {\n                this.ctrl.disableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n    }\n    unblock() {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (const gesture of this.disable) {\n                this.ctrl.enableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.enableScroll(this.id);\n        }\n    }\n    destroy() {\n        this.unblock();\n        this.ctrl = undefined;\n    }\n}\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nconst GESTURE_CONTROLLER = new GestureController();\n\nconst addEventListener = (el, eventName, callback, opts) => {\n    // use event listener options when supported\n    // otherwise it's just a boolean for the \"capture\" arg\n    const listenerOpts = supportsPassive(el) ? {\n        'capture': !!opts.capture,\n        'passive': !!opts.passive,\n    } : !!opts.capture;\n    let add;\n    let remove;\n    if (el['__zone_symbol__addEventListener']) {\n        add = '__zone_symbol__addEventListener';\n        remove = '__zone_symbol__removeEventListener';\n    }\n    else {\n        add = 'addEventListener';\n        remove = 'removeEventListener';\n    }\n    el[add](eventName, callback, listenerOpts);\n    return () => {\n        el[remove](eventName, callback, listenerOpts);\n    };\n};\nconst supportsPassive = (node) => {\n    if (_sPassive === undefined) {\n        try {\n            const opts = Object.defineProperty({}, 'passive', {\n                get: () => {\n                    _sPassive = true;\n                }\n            });\n            node.addEventListener('optsTest', () => { return; }, opts);\n        }\n        catch (e) {\n            _sPassive = false;\n        }\n    }\n    return !!_sPassive;\n};\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n    let rmTouchStart;\n    let rmTouchMove;\n    let rmTouchEnd;\n    let rmTouchCancel;\n    let rmMouseStart;\n    let rmMouseMove;\n    let rmMouseUp;\n    let lastTouchEvent = 0;\n    const handleTouchStart = (ev) => {\n        lastTouchEvent = Date.now() + MOUSE_WAIT;\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmTouchMove && pointerMove) {\n            rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n        }\n        if (!rmTouchEnd) {\n            rmTouchEnd = addEventListener(el, 'touchend', handleTouchEnd, options);\n        }\n        if (!rmTouchCancel) {\n            rmTouchCancel = addEventListener(el, 'touchcancel', handleTouchEnd, options);\n        }\n    };\n    const handleMouseDown = (ev) => {\n        if (lastTouchEvent > Date.now()) {\n            return;\n        }\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmMouseMove && pointerMove) {\n            rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n        }\n        if (!rmMouseUp) {\n            rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n        }\n    };\n    const handleTouchEnd = (ev) => {\n        stopTouch();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    const handleMouseUp = (ev) => {\n        stopMouse();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    const stopTouch = () => {\n        if (rmTouchMove) {\n            rmTouchMove();\n        }\n        if (rmTouchEnd) {\n            rmTouchEnd();\n        }\n        if (rmTouchCancel) {\n            rmTouchCancel();\n        }\n        rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n    };\n    const stopMouse = () => {\n        if (rmMouseMove) {\n            rmMouseMove();\n        }\n        if (rmMouseUp) {\n            rmMouseUp();\n        }\n        rmMouseMove = rmMouseUp = undefined;\n    };\n    const stop = () => {\n        stopTouch();\n        stopMouse();\n    };\n    const enable = (isEnabled = true) => {\n        if (!isEnabled) {\n            if (rmTouchStart) {\n                rmTouchStart();\n            }\n            if (rmMouseStart) {\n                rmMouseStart();\n            }\n            rmTouchStart = rmMouseStart = undefined;\n            stop();\n        }\n        else {\n            if (!rmTouchStart) {\n                rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n            }\n            if (!rmMouseStart) {\n                rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n            }\n        }\n    };\n    const destroy = () => {\n        enable(false);\n        pointerUp = pointerMove = pointerDown = undefined;\n    };\n    return {\n        enable,\n        stop,\n        destroy\n    };\n};\nconst getDocument = (node) => {\n    return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n    const radians = maxAngle * (Math.PI / 180);\n    const isDirX = direction === 'x';\n    const maxCosine = Math.cos(radians);\n    const threshold = thresh * thresh;\n    let startX = 0;\n    let startY = 0;\n    let dirty = false;\n    let isPan = 0;\n    return {\n        start(x, y) {\n            startX = x;\n            startY = y;\n            isPan = 0;\n            dirty = true;\n        },\n        detect(x, y) {\n            if (!dirty) {\n                return false;\n            }\n            const deltaX = (x - startX);\n            const deltaY = (y - startY);\n            const distance = deltaX * deltaX + deltaY * deltaY;\n            if (distance < threshold) {\n                return false;\n            }\n            const hypotenuse = Math.sqrt(distance);\n            const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n            if (cosine > maxCosine) {\n                isPan = 1;\n            }\n            else if (cosine < -maxCosine) {\n                isPan = -1;\n            }\n            else {\n                isPan = 0;\n            }\n            dirty = false;\n            return true;\n        },\n        isGesture() {\n            return isPan !== 0;\n        },\n        getDirection() {\n            return isPan;\n        }\n    };\n};\n\nconst createGesture = (config) => {\n    let hasCapturedPan = false;\n    let hasStartedPan = false;\n    let hasFiredStart = true;\n    let isMoveQueued = false;\n    const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n    const canStart = finalConfig.canStart;\n    const onWillStart = finalConfig.onWillStart;\n    const onStart = finalConfig.onStart;\n    const onEnd = finalConfig.onEnd;\n    const notCaptured = finalConfig.notCaptured;\n    const onMove = finalConfig.onMove;\n    const threshold = finalConfig.threshold;\n    const detail = {\n        type: 'pan',\n        startX: 0,\n        startY: 0,\n        startTime: 0,\n        currentX: 0,\n        currentY: 0,\n        velocityX: 0,\n        velocityY: 0,\n        deltaX: 0,\n        deltaY: 0,\n        currentTime: 0,\n        event: undefined,\n        data: undefined\n    };\n    const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n    const gesture = GESTURE_CONTROLLER.createGesture({\n        name: config.gestureName,\n        priority: config.gesturePriority,\n        disableScroll: config.disableScroll\n    });\n    const pointerDown = (ev) => {\n        const timeStamp = now(ev);\n        if (hasStartedPan || !hasFiredStart) {\n            return false;\n        }\n        updateDetail(ev, detail);\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTime = detail.currentTime = timeStamp;\n        detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n        detail.event = ev;\n        // Check if gesture can start\n        if (canStart && canStart(detail) === false) {\n            return false;\n        }\n        // Release fallback\n        gesture.release();\n        // Start gesture\n        if (!gesture.start()) {\n            return false;\n        }\n        hasStartedPan = true;\n        if (threshold === 0) {\n            return tryToCapturePan();\n        }\n        pan.start(detail.startX, detail.startY);\n        return true;\n    };\n    const pointerMove = (ev) => {\n        // fast path, if gesture is currently captured\n        // do minimum job to get user-land even dispatched\n        if (hasCapturedPan) {\n            if (!isMoveQueued && hasFiredStart) {\n                isMoveQueued = true;\n                calcGestureData(detail, ev);\n                requestAnimationFrame(fireOnMove);\n            }\n            return;\n        }\n        // gesture is currently being detected\n        calcGestureData(detail, ev);\n        if (pan.detect(detail.currentX, detail.currentY)) {\n            if (!pan.isGesture() || !tryToCapturePan()) {\n                abortGesture();\n            }\n        }\n    };\n    const fireOnMove = () => {\n        // Since fireOnMove is called inside a RAF, onEnd() might be called,\n        // we must double check hasCapturedPan\n        if (!hasCapturedPan) {\n            return;\n        }\n        isMoveQueued = false;\n        if (onMove) {\n            onMove(detail);\n        }\n    };\n    const tryToCapturePan = () => {\n        if (gesture && !gesture.capture()) {\n            return false;\n        }\n        hasCapturedPan = true;\n        hasFiredStart = false;\n        // reset start position since the real user-land event starts here\n        // If the pan detector threshold is big, not resetting the start position\n        // will cause a jump in the animation equal to the detector threshold.\n        // the array of positions used to calculate the gesture velocity does not\n        // need to be cleaned, more points in the positions array always results in a\n        // more accurate value of the velocity.\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTime = detail.currentTime;\n        if (onWillStart) {\n            onWillStart(detail).then(fireOnStart);\n        }\n        else {\n            fireOnStart();\n        }\n        return true;\n    };\n    const fireOnStart = () => {\n        if (onStart) {\n            onStart(detail);\n        }\n        hasFiredStart = true;\n    };\n    const reset = () => {\n        hasCapturedPan = false;\n        hasStartedPan = false;\n        isMoveQueued = false;\n        hasFiredStart = true;\n        gesture.release();\n    };\n    // END *************************\n    const pointerUp = (ev) => {\n        const tmpHasCaptured = hasCapturedPan;\n        const tmpHasFiredStart = hasFiredStart;\n        reset();\n        if (!tmpHasFiredStart) {\n            return;\n        }\n        calcGestureData(detail, ev);\n        // Try to capture press\n        if (tmpHasCaptured) {\n            if (onEnd) {\n                onEnd(detail);\n            }\n            return;\n        }\n        // Not captured any event\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n        capture: false,\n    });\n    const abortGesture = () => {\n        reset();\n        pointerEvents.stop();\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    return {\n        enable(enable = true) {\n            if (!enable) {\n                if (hasCapturedPan) {\n                    pointerUp(undefined);\n                }\n                reset();\n            }\n            pointerEvents.enable(enable);\n        },\n        destroy() {\n            gesture.destroy();\n            pointerEvents.destroy();\n        }\n    };\n};\nconst calcGestureData = (detail, ev) => {\n    if (!ev) {\n        return;\n    }\n    const prevX = detail.currentX;\n    const prevY = detail.currentY;\n    const prevT = detail.currentTime;\n    updateDetail(ev, detail);\n    const currentX = detail.currentX;\n    const currentY = detail.currentY;\n    const timestamp = detail.currentTime = now(ev);\n    const timeDelta = timestamp - prevT;\n    if (timeDelta > 0 && timeDelta < 100) {\n        const velocityX = (currentX - prevX) / timeDelta;\n        const velocityY = (currentY - prevY) / timeDelta;\n        detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n        detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n    }\n    detail.deltaX = currentX - detail.startX;\n    detail.deltaY = currentY - detail.startY;\n    detail.event = ev;\n};\nconst updateDetail = (ev, detail) => {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    let x = 0;\n    let y = 0;\n    if (ev) {\n        const changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            const touch = changedTouches[0];\n            x = touch.clientX;\n            y = touch.clientY;\n        }\n        else if (ev.pageX !== undefined) {\n            x = ev.pageX;\n            y = ev.pageY;\n        }\n    }\n    detail.currentX = x;\n    detail.currentY = y;\n};\nconst now = (ev) => {\n    return ev.timeStamp || Date.now();\n};\n\nexport { GESTURE_CONTROLLER, createGesture };\n"]},"metadata":{},"sourceType":"module"}