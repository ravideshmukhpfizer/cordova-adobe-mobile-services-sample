{"ast":null,"code":"import _defineProperty from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { r as registerInstance, d as createEvent, h, H as Host } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { n as now } from './helpers-d8b49b57.js';\nimport { GESTURE_CONTROLLER } from './index-e44ebcc6.js';\nvar backdropIosCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\nvar backdropMdCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\n\nvar Backdrop = /*#__PURE__*/function () {\n  function Backdrop(hostRef) {\n    _classCallCheck(this, Backdrop);\n\n    registerInstance(this, hostRef);\n    this.lastClick = -10000;\n    this.blocker = GESTURE_CONTROLLER.createBlocker({\n      disableScroll: true\n    });\n    /**\n     * If `true`, the backdrop will be visible.\n     */\n\n    this.visible = true;\n    /**\n     * If `true`, the backdrop will can be clicked and will emit the `ionBackdropTap` event.\n     */\n\n    this.tappable = true;\n    /**\n     * If `true`, the backdrop will stop propagation on tap.\n     */\n\n    this.stopPropagation = true;\n    this.ionBackdropTap = createEvent(this, \"ionBackdropTap\", 7);\n  }\n\n  _createClass(Backdrop, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      if (this.stopPropagation) {\n        this.blocker.block();\n      }\n    }\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      this.blocker.unblock();\n    }\n  }, {\n    key: \"onTouchStart\",\n    value: function onTouchStart(ev) {\n      this.lastClick = now(ev);\n      this.emitTap(ev);\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(ev) {\n      if (this.lastClick < now(ev) - 2500) {\n        this.emitTap(ev);\n      }\n    }\n  }, {\n    key: \"emitTap\",\n    value: function emitTap(ev) {\n      if (this.stopPropagation) {\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n\n      if (this.tappable) {\n        this.ionBackdropTap.emit();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _class;\n\n      var mode = getIonMode(this);\n      return h(Host, {\n        tabindex: \"-1\",\n        class: (_class = {}, _defineProperty(_class, mode, true), _defineProperty(_class, 'backdrop-hide', !this.visible), _defineProperty(_class, 'backdrop-no-tappable', !this.tappable), _class)\n      });\n    }\n  }]);\n\n  return Backdrop;\n}();\n\nBackdrop.style = {\n  /*STENCIL:MODE:ios*/\n  ios: backdropIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: backdropMdCss\n};\nexport { Backdrop as ion_backdrop };","map":{"version":3,"sources":["/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/@ionic/core/dist/esm-es5/ion-backdrop-md.entry.js"],"names":["r","registerInstance","d","createEvent","h","H","Host","b","getIonMode","n","now","GESTURE_CONTROLLER","backdropIosCss","backdropMdCss","Backdrop","hostRef","lastClick","blocker","createBlocker","disableScroll","visible","tappable","stopPropagation","ionBackdropTap","block","unblock","ev","emitTap","preventDefault","emit","mode","tabindex","class","style","ios","md","ion_backdrop"],"mappings":";;;AAAA,SAASA,CAAC,IAAIC,gBAAd,EAAgCC,CAAC,IAAIC,WAArC,EAAkDC,CAAlD,EAAqDC,CAAC,IAAIC,IAA1D,QAAsE,qBAAtE;AACA,SAASC,CAAC,IAAIC,UAAd,QAAgC,4BAAhC;AACA,SAASC,CAAC,IAAIC,GAAd,QAAyB,uBAAzB;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AAEA,IAAMC,cAAc,GAAG,wWAAvB;AAEA,IAAMC,aAAa,GAAG,wWAAtB;;AAEA,IAAMC,QAAQ;AACV,oBAAYC,OAAZ,EAAqB;AAAA;;AACjBd,IAAAA,gBAAgB,CAAC,IAAD,EAAOc,OAAP,CAAhB;AACA,SAAKC,SAAL,GAAiB,CAAC,KAAlB;AACA,SAAKC,OAAL,GAAeN,kBAAkB,CAACO,aAAnB,CAAiC;AAC5CC,MAAAA,aAAa,EAAE;AAD6B,KAAjC,CAAf;AAGA;;;;AAGA,SAAKC,OAAL,GAAe,IAAf;AACA;;;;AAGA,SAAKC,QAAL,GAAgB,IAAhB;AACA;;;;AAGA,SAAKC,eAAL,GAAuB,IAAvB;AACA,SAAKC,cAAL,GAAsBpB,WAAW,CAAC,IAAD,EAAO,gBAAP,EAAyB,CAAzB,CAAjC;AACH;;AApBS;AAAA;AAAA,wCAqBU;AAChB,UAAI,KAAKmB,eAAT,EAA0B;AACtB,aAAKL,OAAL,CAAaO,KAAb;AACH;AACJ;AAzBS;AAAA;AAAA,2CA0Ba;AACnB,WAAKP,OAAL,CAAaQ,OAAb;AACH;AA5BS;AAAA;AAAA,iCA6BGC,EA7BH,EA6BO;AACb,WAAKV,SAAL,GAAiBN,GAAG,CAACgB,EAAD,CAApB;AACA,WAAKC,OAAL,CAAaD,EAAb;AACH;AAhCS;AAAA;AAAA,gCAiCEA,EAjCF,EAiCM;AACZ,UAAI,KAAKV,SAAL,GAAiBN,GAAG,CAACgB,EAAD,CAAH,GAAU,IAA/B,EAAqC;AACjC,aAAKC,OAAL,CAAaD,EAAb;AACH;AACJ;AArCS;AAAA;AAAA,4BAsCFA,EAtCE,EAsCE;AACR,UAAI,KAAKJ,eAAT,EAA0B;AACtBI,QAAAA,EAAE,CAACE,cAAH;AACAF,QAAAA,EAAE,CAACJ,eAAH;AACH;;AACD,UAAI,KAAKD,QAAT,EAAmB;AACf,aAAKE,cAAL,CAAoBM,IAApB;AACH;AACJ;AA9CS;AAAA;AAAA,6BA+CD;AAAA;;AACL,UAAMC,IAAI,GAAGtB,UAAU,CAAC,IAAD,CAAvB;AACA,aAAQJ,CAAC,CAACE,IAAD,EAAO;AAAEyB,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,KAAK,wCAC9BF,IAD8B,EACvB,IADuB,2BAE/B,eAF+B,EAEd,CAAC,KAAKV,OAFQ,2BAG/B,sBAH+B,EAGP,CAAC,KAAKC,QAHC;AAAvB,OAAP,CAAT;AAKH;AAtDS;;AAAA;AAAA,GAAd;;AAwDAP,QAAQ,CAACmB,KAAT,GAAiB;AACb;AAAqBC,EAAAA,GAAG,EAAEtB,cADb;;AAEb;AAAoBuB,EAAAA,EAAE,EAAEtB;AAFX,CAAjB;AAKA,SAASC,QAAQ,IAAIsB,YAArB","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host } from './index-2cd7e630.js';\nimport { b as getIonMode } from './ionic-global-a175fa73.js';\nimport { n as now } from './helpers-d8b49b57.js';\nimport { GESTURE_CONTROLLER } from './index-e44ebcc6.js';\n\nconst backdropIosCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\n\nconst backdropMdCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\n\nconst Backdrop = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastClick = -10000;\n        this.blocker = GESTURE_CONTROLLER.createBlocker({\n            disableScroll: true\n        });\n        /**\n         * If `true`, the backdrop will be visible.\n         */\n        this.visible = true;\n        /**\n         * If `true`, the backdrop will can be clicked and will emit the `ionBackdropTap` event.\n         */\n        this.tappable = true;\n        /**\n         * If `true`, the backdrop will stop propagation on tap.\n         */\n        this.stopPropagation = true;\n        this.ionBackdropTap = createEvent(this, \"ionBackdropTap\", 7);\n    }\n    connectedCallback() {\n        if (this.stopPropagation) {\n            this.blocker.block();\n        }\n    }\n    disconnectedCallback() {\n        this.blocker.unblock();\n    }\n    onTouchStart(ev) {\n        this.lastClick = now(ev);\n        this.emitTap(ev);\n    }\n    onMouseDown(ev) {\n        if (this.lastClick < now(ev) - 2500) {\n            this.emitTap(ev);\n        }\n    }\n    emitTap(ev) {\n        if (this.stopPropagation) {\n            ev.preventDefault();\n            ev.stopPropagation();\n        }\n        if (this.tappable) {\n            this.ionBackdropTap.emit();\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { tabindex: \"-1\", class: {\n                [mode]: true,\n                'backdrop-hide': !this.visible,\n                'backdrop-no-tappable': !this.tappable,\n            } }));\n    }\n};\nBackdrop.style = {\n    /*STENCIL:MODE:ios*/ ios: backdropIosCss,\n    /*STENCIL:MODE:md*/ md: backdropMdCss\n};\n\nexport { Backdrop as ion_backdrop };\n"]},"metadata":{},"sourceType":"module"}