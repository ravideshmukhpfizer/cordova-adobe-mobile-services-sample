{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar hostContext = function hostContext(selector, el) {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\n\n\nvar createColorClasses = function createColorClasses(color) {\n  return typeof color === 'string' && color.length > 0 ? _defineProperty({\n    'ion-color': true\n  }, \"ion-color-\".concat(color), true) : undefined;\n};\n\nvar getClassList = function getClassList(classes) {\n  if (classes !== undefined) {\n    var array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array.filter(function (c) {\n      return c != null;\n    }).map(function (c) {\n      return c.trim();\n    }).filter(function (c) {\n      return c !== '';\n    });\n  }\n\n  return [];\n};\n\nvar getClassMap = function getClassMap(classes) {\n  var map = {};\n  getClassList(classes).forEach(function (c) {\n    return map[c] = true;\n  });\n  return map;\n};\n\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\n\nvar openURL = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url, ev, direction) {\n    var router;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(url != null && url[0] !== '#' && !SCHEME.test(url))) {\n              _context.next = 5;\n              break;\n            }\n\n            router = document.querySelector('ion-router');\n\n            if (!router) {\n              _context.next = 5;\n              break;\n            }\n\n            if (ev != null) {\n              ev.preventDefault();\n            }\n\n            return _context.abrupt(\"return\", router.push(url, direction));\n\n          case 5:\n            return _context.abrupt(\"return\", false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function openURL(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };","map":{"version":3,"sources":["/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/@ionic/core/dist/esm-es5/theme-c2dc54d9.js"],"names":["hostContext","selector","el","closest","createColorClasses","color","length","undefined","getClassList","classes","array","Array","isArray","split","filter","c","map","trim","getClassMap","forEach","SCHEME","openURL","url","ev","direction","test","router","document","querySelector","preventDefault","push","g","h","o"],"mappings":";;;;AAAA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,EAAX,EAAkB;AAClC,SAAOA,EAAE,CAACC,OAAH,CAAWF,QAAX,MAAyB,IAAhC;AACH,CAFD;AAGA;;;;;AAGA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAClC,SAAQ,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,MAAN,GAAe,CAA7C;AACH,iBAAa;AADV,yBAEWD,KAFX,GAEqB,IAFrB,IAGHE,SAHJ;AAIH,CALD;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AAC9B,MAAIA,OAAO,KAAKF,SAAhB,EAA2B;AACvB,QAAMG,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcH,OAAd,IAAyBA,OAAzB,GAAmCA,OAAO,CAACI,KAAR,CAAc,GAAd,CAAjD;AACA,WAAOH,KAAK,CACPI,MADE,CACK,UAAAC,CAAC;AAAA,aAAIA,CAAC,IAAI,IAAT;AAAA,KADN,EAEFC,GAFE,CAEE,UAAAD,CAAC;AAAA,aAAIA,CAAC,CAACE,IAAF,EAAJ;AAAA,KAFH,EAGFH,MAHE,CAGK,UAAAC,CAAC;AAAA,aAAIA,CAAC,KAAK,EAAV;AAAA,KAHN,CAAP;AAIH;;AACD,SAAO,EAAP;AACH,CATD;;AAUA,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACT,OAAD,EAAa;AAC7B,MAAMO,GAAG,GAAG,EAAZ;AACAR,EAAAA,YAAY,CAACC,OAAD,CAAZ,CAAsBU,OAAtB,CAA8B,UAAAJ,CAAC;AAAA,WAAIC,GAAG,CAACD,CAAD,CAAH,GAAS,IAAb;AAAA,GAA/B;AACA,SAAOC,GAAP;AACH,CAJD;;AAKA,IAAMI,MAAM,GAAG,sBAAf;;AACA,IAAMC,OAAO;AAAA,uEAAG,iBAAOC,GAAP,EAAYC,EAAZ,EAAgBC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACRF,GAAG,IAAI,IAAP,IAAeA,GAAG,CAAC,CAAD,CAAH,KAAW,GAA1B,IAAiC,CAACF,MAAM,CAACK,IAAP,CAAYH,GAAZ,CAD1B;AAAA;AAAA;AAAA;;AAEFI,YAAAA,MAFE,GAEOC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAFP;;AAAA,iBAGJF,MAHI;AAAA;AAAA;AAAA;;AAIJ,gBAAIH,EAAE,IAAI,IAAV,EAAgB;AACZA,cAAAA,EAAE,CAACM,cAAH;AACH;;AANG,6CAOGH,MAAM,CAACI,IAAP,CAAYR,GAAZ,EAAiBE,SAAjB,CAPH;;AAAA;AAAA,6CAUL,KAVK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPH,OAAO;AAAA;AAAA;AAAA,GAAb;;AAaA,SAASjB,kBAAkB,IAAIW,CAA/B,EAAkCG,WAAW,IAAIa,CAAjD,EAAoD/B,WAAW,IAAIgC,CAAnE,EAAsEX,OAAO,IAAIY,CAAjF","sourcesContent":["const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"]},"metadata":{},"sourceType":"module"}