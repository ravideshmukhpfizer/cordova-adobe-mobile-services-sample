{"ast":null,"code":"import _defineProperty from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { w as writeTask, r as registerInstance, d as createEvent, f as readTask, h, e as getElement, H as Host } from './index-2cd7e630.js';\nimport { i as isPlatform, b as getIonMode, c as config } from './ionic-global-a175fa73.js';\nimport './utils-35117408.js';\nimport './index.mjs';\nimport { c as clamp, r as raf } from './helpers-d8b49b57.js';\nimport { c as createAnimation } from './animation-f72ade61.js';\nimport './index-157155ee.js';\nimport './ios.transition-11c6a0fa.js';\nimport './md.transition-3e9127c1.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport './index-e44ebcc6.js';\nimport './hardware-back-button-784b7e3c.js';\nimport './index-9af8638a.js';\nimport './overlays-998692a2.js';\nimport { s as sanitizeDOMString } from './index-729ec402.js';\nimport { S as SPINNERS } from './spinner-configs-c78e170e.js';\nvar HapticEngine = {\n  getEngine: function getEngine() {\n    var win = window;\n    return win.TapticEngine || win.Capacitor && win.Capacitor.Plugins.Haptics;\n  },\n  available: function available() {\n    return !!this.getEngine();\n  },\n  isCordova: function isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor: function isCapacitor() {\n    var win = window;\n    return !!win.Capacitor;\n  },\n  impact: function impact(options) {\n    var engine = this.getEngine();\n\n    if (!engine) {\n      return;\n    }\n\n    var style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({\n      style: style\n    });\n  },\n  notification: function notification(options) {\n    var engine = this.getEngine();\n\n    if (!engine) {\n      return;\n    }\n\n    var style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({\n      style: style\n    });\n  },\n  selection: function selection() {\n    this.impact({\n      style: 'light'\n    });\n  },\n  selectionStart: function selectionStart() {\n    var engine = this.getEngine();\n\n    if (!engine) {\n      return;\n    }\n\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    } else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged: function selectionChanged() {\n    var engine = this.getEngine();\n\n    if (!engine) {\n      return;\n    }\n\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    } else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd: function selectionEnd() {\n    var engine = this.getEngine();\n\n    if (!engine) {\n      return;\n    }\n\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    } else {\n      engine.gestureSelectionChanged();\n    }\n  }\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\n\nvar hapticImpact = function hapticImpact(options) {\n  HapticEngine.impact(options);\n};\n\nvar getRefresherAnimationType = function getRefresherAnimationType(contentEl) {\n  var previousSibling = contentEl.previousElementSibling;\n  var hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\n\nvar createPullingAnimation = function createPullingAnimation(type, pullingSpinner) {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner) : createTranslateAnimation(pullingSpinner);\n};\n\nvar createBaseAnimation = function createBaseAnimation(pullingRefresherIcon) {\n  var spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  var circle = spinner.shadowRoot.querySelector('circle');\n  var spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  var arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  var arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n  var baseAnimation = createAnimation().duration(1000).easing('ease-out');\n  var spinnerArrowContainerAnimation = createAnimation().addElement(spinnerArrowContainer).keyframes([{\n    offset: 0,\n    opacity: '0.3'\n  }, {\n    offset: 0.45,\n    opacity: '0.3'\n  }, {\n    offset: 0.55,\n    opacity: '1'\n  }, {\n    offset: 1,\n    opacity: '1'\n  }]);\n  var circleInnerAnimation = createAnimation().addElement(circle).keyframes([{\n    offset: 0,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.20,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.55,\n    strokeDasharray: '100px, 200px'\n  }, {\n    offset: 1,\n    strokeDasharray: '100px, 200px'\n  }]);\n  var circleOuterAnimation = createAnimation().addElement(spinner).keyframes([{\n    offset: 0,\n    transform: 'rotate(-90deg)'\n  }, {\n    offset: 1,\n    transform: 'rotate(210deg)'\n  }]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n\n  if (arrowContainer && arrow) {\n    var arrowContainerAnimation = createAnimation().addElement(arrowContainer).keyframes([{\n      offset: 0,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.30,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.55,\n      transform: 'rotate(280deg)'\n    }, {\n      offset: 1,\n      transform: 'rotate(400deg)'\n    }]);\n    var arrowAnimation = createAnimation().addElement(arrow).keyframes([{\n      offset: 0,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.30,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.55,\n      transform: 'translateX(-1.5px) scale(1)'\n    }, {\n      offset: 1,\n      transform: 'translateX(-1.5px) scale(1)'\n    }]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\n\nvar createScaleAnimation = function createScaleAnimation(pullingRefresherIcon) {\n  var height = pullingRefresherIcon.clientHeight;\n  var spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: \"scale(0) translateY(-\".concat(height + 20, \"px)\")\n  }, {\n    offset: 1,\n    transform: 'scale(1) translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\n\nvar createTranslateAnimation = function createTranslateAnimation(pullingRefresherIcon) {\n  var height = pullingRefresherIcon.clientHeight;\n  var spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: \"translateY(-\".concat(height + 20, \"px)\")\n  }, {\n    offset: 1,\n    transform: 'translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\n\nvar createSnapBackAnimation = function createSnapBackAnimation(pullingRefresherIcon) {\n  return createAnimation().duration(125).addElement(pullingRefresherIcon).fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n}; // iOS Native Refresher\n// -----------------------------\n\n\nvar setSpinnerOpacity = function setSpinnerOpacity(spinner, opacity) {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\n\nvar handleScrollWhilePulling = function handleScrollWhilePulling(spinner, ticks, opacity, currentTickToShow) {\n  writeTask(function () {\n    setSpinnerOpacity(spinner, opacity);\n    ticks.forEach(function (el, i) {\n      return el.style.setProperty('opacity', i <= currentTickToShow ? '0.99' : '0');\n    });\n  });\n};\n\nvar handleScrollWhileRefreshing = function handleScrollWhileRefreshing(spinner, lastVelocityY) {\n  writeTask(function () {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\n\nvar translateElement = function translateElement(el, value) {\n  if (!el) {\n    return Promise.resolve();\n  }\n\n  var trans = transitionEndAsync(el);\n  writeTask(function () {\n    el.style.setProperty('transition', '0.2s all ease-out');\n\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    } else {\n      el.style.setProperty('transform', \"translate3d(0px, \".concat(value, \", 0px)\"));\n    }\n  });\n  return trans;\n}; // Utils\n// -----------------------------\n\n\nvar shouldUseNativeRefresher = function shouldUseNativeRefresher(referenceEl, mode) {\n  var pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  var refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return pullingSpinner !== null && refreshingSpinner !== null && (mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined || mode === 'md');\n};\n\nvar transitionEndAsync = function transitionEndAsync(el) {\n  return new Promise(function (resolve) {\n    transitionEnd(el, resolve);\n  });\n};\n\nvar transitionEnd = function transitionEnd(el, callback) {\n  var unRegTrans;\n  var opts = {\n    passive: true\n  };\n\n  var unregister = function unregister() {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n\n  var onTransitionEnd = function onTransitionEnd(ev) {\n    if (el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n\n  if (el) {\n    el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n    el.addEventListener('transitionend', onTransitionEnd, opts);\n\n    unRegTrans = function unRegTrans() {\n      el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n      el.removeEventListener('transitionend', onTransitionEnd, opts);\n    };\n  }\n\n  return unregister;\n};\n\nvar refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\nvar refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid #ececec;background:white;-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nvar Refresher = /*#__PURE__*/function () {\n  function Refresher(hostRef) {\n    _classCallCheck(this, Refresher);\n\n    registerInstance(this, hostRef);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n\n    this.state = 1\n    /* Inactive */\n    ;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n\n    this.disabled = false;\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n  }\n\n  _createClass(Refresher, [{\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      if (this.gesture) {\n        this.gesture.enable(!this.disabled);\n      }\n    }\n  }, {\n    key: \"checkNativeRefresher\",\n    value: function checkNativeRefresher() {\n      var useNativeRefresher = shouldUseNativeRefresher(this.el, getIonMode(this));\n\n      if (useNativeRefresher && !this.nativeRefresher) {\n        var contentEl = this.el.closest('ion-content');\n        this.setupNativeRefresher(contentEl);\n      } else if (!useNativeRefresher) {\n        this.destroyNativeRefresher();\n      }\n    }\n  }, {\n    key: \"destroyNativeRefresher\",\n    value: function destroyNativeRefresher() {\n      if (this.scrollEl && this.scrollListenerCallback) {\n        this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n        this.scrollListenerCallback = undefined;\n      }\n\n      this.nativeRefresher = false;\n    }\n  }, {\n    key: \"resetNativeRefresher\",\n    value: function () {\n      var _resetNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(el, state) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.state = state;\n\n                if (!(getIonMode(this) === 'ios')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 4;\n                return translateElement(el, undefined);\n\n              case 4:\n                _context.next = 8;\n                break;\n\n              case 6:\n                _context.next = 8;\n                return transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'));\n\n              case 8:\n                this.didRefresh = false;\n                this.needsCompletion = false;\n                this.pointerDown = false;\n                this.animations.forEach(function (ani) {\n                  return ani.destroy();\n                });\n                this.animations = [];\n                this.progress = 0;\n                this.state = 1\n                /* Inactive */\n                ;\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function resetNativeRefresher(_x, _x2) {\n        return _resetNativeRefresher.apply(this, arguments);\n      }\n\n      return resetNativeRefresher;\n    }()\n  }, {\n    key: \"setupiOSNativeRefresher\",\n    value: function () {\n      var _setupiOSNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(pullingSpinner, refreshingSpinner) {\n        var _this = this;\n\n        var ticks, MAX_PULL, NUM_TICKS;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.elementToTransform = this.scrollEl;\n                ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n                MAX_PULL = this.scrollEl.clientHeight * 0.16;\n                NUM_TICKS = ticks.length;\n                writeTask(function () {\n                  return ticks.forEach(function (el) {\n                    return el.style.setProperty('animation', 'none');\n                  });\n                });\n\n                this.scrollListenerCallback = function () {\n                  // If pointer is not on screen or refresher is not active, ignore scroll\n                  if (!_this.pointerDown && _this.state === 1\n                  /* Inactive */\n                  ) {\n                      return;\n                    }\n\n                  readTask(function () {\n                    // PTR should only be active when overflow scrolling at the top\n                    var scrollTop = _this.scrollEl.scrollTop;\n                    var refresherHeight = _this.el.clientHeight;\n\n                    if (scrollTop > 0) {\n                      /**\n                       * If refresher is refreshing and user tries to scroll\n                       * progressively fade refresher out/in\n                       */\n                      if (_this.state === 8\n                      /* Refreshing */\n                      ) {\n                          var ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n                          writeTask(function () {\n                            return setSpinnerOpacity(refreshingSpinner, 1 - ratio);\n                          });\n                          return;\n                        }\n\n                      writeTask(function () {\n                        return setSpinnerOpacity(pullingSpinner, 0);\n                      });\n                      return;\n                    }\n\n                    if (_this.pointerDown) {\n                      if (!_this.didStart) {\n                        _this.didStart = true;\n\n                        _this.ionStart.emit();\n                      } // emit \"pulling\" on every move\n\n\n                      if (_this.pointerDown) {\n                        _this.ionPull.emit();\n                      }\n                    } // delay showing the next tick marks until user has pulled 30px\n\n\n                    var opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n                    var pullAmount = _this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n                    var currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n                    var shouldShowRefreshingSpinner = _this.state === 8\n                    /* Refreshing */\n                    || currentTickToShow === NUM_TICKS - 1;\n\n                    if (shouldShowRefreshingSpinner) {\n                      if (_this.pointerDown) {\n                        handleScrollWhileRefreshing(refreshingSpinner, _this.lastVelocityY);\n                      }\n\n                      if (!_this.didRefresh) {\n                        _this.beginRefresh();\n\n                        _this.didRefresh = true;\n                        hapticImpact({\n                          style: 'light'\n                        });\n                        /**\n                         * Translate the content element otherwise when pointer is removed\n                         * from screen the scroll content will bounce back over the refresher\n                         */\n\n                        if (!_this.pointerDown) {\n                          translateElement(_this.elementToTransform, \"\".concat(refresherHeight, \"px\"));\n                        }\n                      }\n                    } else {\n                      _this.state = 2\n                      /* Pulling */\n                      ;\n                      handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n                    }\n                  });\n                };\n\n                this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n                _context2.next = 9;\n                return import('./index-e44ebcc6.js');\n\n              case 9:\n                this.gesture = _context2.sent.createGesture({\n                  el: this.scrollEl,\n                  gestureName: 'refresher',\n                  gesturePriority: 10,\n                  direction: 'y',\n                  threshold: 5,\n                  onStart: function onStart() {\n                    _this.pointerDown = true;\n\n                    if (!_this.didRefresh) {\n                      translateElement(_this.elementToTransform, '0px');\n                    }\n                  },\n                  onMove: function onMove(ev) {\n                    _this.lastVelocityY = ev.velocityY;\n                  },\n                  onEnd: function onEnd() {\n                    _this.pointerDown = false;\n                    _this.didStart = false;\n\n                    if (_this.needsCompletion) {\n                      _this.resetNativeRefresher(_this.elementToTransform, 32\n                      /* Completing */\n                      );\n\n                      _this.needsCompletion = false;\n                    } else if (_this.didRefresh) {\n                      readTask(function () {\n                        return translateElement(_this.elementToTransform, \"\".concat(_this.el.clientHeight, \"px\"));\n                      });\n                    }\n                  }\n                });\n                this.disabledChanged();\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function setupiOSNativeRefresher(_x3, _x4) {\n        return _setupiOSNativeRefresher.apply(this, arguments);\n      }\n\n      return setupiOSNativeRefresher;\n    }()\n  }, {\n    key: \"setupMDNativeRefresher\",\n    value: function () {\n      var _setupMDNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(contentEl, pullingSpinner, refreshingSpinner) {\n        var _this2 = this;\n\n        var circle, pullingRefresherIcon, refreshingCircle;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                circle = pullingSpinner.shadowRoot.querySelector('circle');\n                pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n                refreshingCircle = refreshingSpinner.shadowRoot.querySelector('circle');\n\n                if (circle !== null && refreshingCircle !== null) {\n                  writeTask(function () {\n                    circle.style.setProperty('animation', 'none'); // This lines up the animation on the refreshing spinner with the pulling spinner\n\n                    refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n                    refreshingCircle.style.setProperty('animation-delay', '-655ms');\n                  });\n                }\n\n                _context4.next = 6;\n                return import('./index-e44ebcc6.js');\n\n              case 6:\n                this.gesture = _context4.sent.createGesture({\n                  el: this.scrollEl,\n                  gestureName: 'refresher',\n                  gesturePriority: 10,\n                  direction: 'y',\n                  threshold: 5,\n                  canStart: function canStart() {\n                    return _this2.state !== 8\n                    /* Refreshing */\n                    && _this2.state !== 32\n                    /* Completing */\n                    && _this2.scrollEl.scrollTop === 0;\n                  },\n                  onStart: function onStart(ev) {\n                    ev.data = {\n                      animation: undefined,\n                      didStart: false,\n                      cancelled: false\n                    };\n                  },\n                  onMove: function onMove(ev) {\n                    if (ev.velocityY < 0 && _this2.progress === 0 && !ev.data.didStart || ev.data.cancelled) {\n                      ev.data.cancelled = true;\n                      return;\n                    }\n\n                    if (!ev.data.didStart) {\n                      ev.data.didStart = true;\n                      _this2.state = 2\n                      /* Pulling */\n                      ;\n                      writeTask(function () {\n                        var animationType = getRefresherAnimationType(contentEl);\n                        var animation = createPullingAnimation(animationType, pullingRefresherIcon);\n                        ev.data.animation = animation;\n\n                        _this2.scrollEl.style.setProperty('--overflow', 'hidden');\n\n                        animation.progressStart(false, 0);\n\n                        _this2.ionStart.emit();\n\n                        _this2.animations.push(animation);\n                      });\n                      return;\n                    } // Since we are using an easing curve, slow the gesture tracking down a bit\n\n\n                    _this2.progress = clamp(0, ev.deltaY / 180 * 0.5, 1);\n                    ev.data.animation.progressStep(_this2.progress);\n\n                    _this2.ionPull.emit();\n                  },\n                  onEnd: function onEnd(ev) {\n                    if (!ev.data.didStart) {\n                      return;\n                    }\n\n                    writeTask(function () {\n                      return _this2.scrollEl.style.removeProperty('--overflow');\n                    });\n\n                    if (_this2.progress <= 0.4) {\n                      _this2.gesture.enable(false);\n\n                      ev.data.animation.progressEnd(0, _this2.progress, 500).onFinish(function () {\n                        _this2.animations.forEach(function (ani) {\n                          return ani.destroy();\n                        });\n\n                        _this2.animations = [];\n\n                        _this2.gesture.enable(true);\n\n                        _this2.state = 1\n                        /* Inactive */\n                        ;\n                      });\n                      return;\n                    }\n\n                    var progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], _this2.progress)[0];\n                    var snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n\n                    _this2.animations.push(snapBackAnimation);\n\n                    writeTask( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                        while (1) {\n                          switch (_context3.prev = _context3.next) {\n                            case 0:\n                              pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', \"\".concat(progress * 100, \"px\"));\n                              ev.data.animation.progressEnd();\n                              _context3.next = 4;\n                              return snapBackAnimation.play();\n\n                            case 4:\n                              _this2.beginRefresh();\n\n                              ev.data.animation.destroy();\n\n                            case 6:\n                            case \"end\":\n                              return _context3.stop();\n                          }\n                        }\n                      }, _callee3);\n                    })));\n                  }\n                });\n                this.disabledChanged();\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function setupMDNativeRefresher(_x5, _x6, _x7) {\n        return _setupMDNativeRefresher.apply(this, arguments);\n      }\n\n      return setupMDNativeRefresher;\n    }()\n  }, {\n    key: \"setupNativeRefresher\",\n    value: function () {\n      var _setupNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(contentEl) {\n        var pullingSpinner, refreshingSpinner;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl)) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 2:\n                this.nativeRefresher = true;\n                pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n                refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n\n                if (getIonMode(this) === 'ios') {\n                  this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n                } else {\n                  this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n                }\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function setupNativeRefresher(_x8) {\n        return _setupNativeRefresher.apply(this, arguments);\n      }\n\n      return setupNativeRefresher;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.checkNativeRefresher();\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var _this3 = this;\n\n        var contentEl;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(this.el.getAttribute('slot') !== 'fixed')) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n                return _context6.abrupt(\"return\");\n\n              case 3:\n                contentEl = this.el.closest('ion-content');\n\n                if (contentEl) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                console.error('<ion-refresher> must be used inside an <ion-content>');\n                return _context6.abrupt(\"return\");\n\n              case 7:\n                _context6.next = 9;\n                return contentEl.getScrollElement();\n\n              case 9:\n                this.scrollEl = _context6.sent;\n                this.backgroundContentEl = contentEl.shadowRoot.querySelector('#background-content');\n\n                if (!shouldUseNativeRefresher(this.el, getIonMode(this))) {\n                  _context6.next = 15;\n                  break;\n                }\n\n                this.setupNativeRefresher(contentEl);\n                _context6.next = 19;\n                break;\n\n              case 15:\n                _context6.next = 17;\n                return import('./index-e44ebcc6.js');\n\n              case 17:\n                this.gesture = _context6.sent.createGesture({\n                  el: contentEl,\n                  gestureName: 'refresher',\n                  gesturePriority: 10,\n                  direction: 'y',\n                  threshold: 20,\n                  passive: false,\n                  canStart: function canStart() {\n                    return _this3.canStart();\n                  },\n                  onStart: function onStart() {\n                    return _this3.onStart();\n                  },\n                  onMove: function onMove(ev) {\n                    return _this3.onMove(ev);\n                  },\n                  onEnd: function onEnd() {\n                    return _this3.onEnd();\n                  }\n                });\n                this.disabledChanged();\n\n              case 19:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n\n      return connectedCallback;\n    }()\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      this.destroyNativeRefresher();\n      this.scrollEl = undefined;\n\n      if (this.gesture) {\n        this.gesture.destroy();\n        this.gesture = undefined;\n      }\n    }\n    /**\n     * Call `complete()` when your async operation has completed.\n     * For example, the `refreshing` state is while the app is performing\n     * an asynchronous operation, such as receiving more data from an\n     * AJAX request. Once the data has been received, you then call this\n     * method to signify that the refreshing has completed and to close\n     * the refresher. This method also changes the refresher's state from\n     * `refreshing` to `completing`.\n     */\n\n  }, {\n    key: \"complete\",\n    value: function () {\n      var _complete = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var _this4 = this;\n\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (this.nativeRefresher) {\n                  this.needsCompletion = true; // Do not reset scroll el until user removes pointer from screen\n\n                  if (!this.pointerDown) {\n                    raf(function () {\n                      return raf(function () {\n                        return _this4.resetNativeRefresher(_this4.elementToTransform, 32\n                        /* Completing */\n                        );\n                      });\n                    });\n                  }\n                } else {\n                  this.close(32\n                  /* Completing */\n                  , '120ms');\n                }\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function complete() {\n        return _complete.apply(this, arguments);\n      }\n\n      return complete;\n    }()\n    /**\n     * Changes the refresher's state from `refreshing` to `cancelling`.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function () {\n      var _cancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var _this5 = this;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (this.nativeRefresher) {\n                  // Do not reset scroll el until user removes pointer from screen\n                  if (!this.pointerDown) {\n                    raf(function () {\n                      return raf(function () {\n                        return _this5.resetNativeRefresher(_this5.elementToTransform, 16\n                        /* Cancelling */\n                        );\n                      });\n                    });\n                  }\n                } else {\n                  this.close(16\n                  /* Cancelling */\n                  , '');\n                }\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function cancel() {\n        return _cancel.apply(this, arguments);\n      }\n\n      return cancel;\n    }()\n    /**\n     * A number representing how far down the user has pulled.\n     * The number `0` represents the user hasn't pulled down at all. The\n     * number `1`, and anything greater than `1`, represents that the user\n     * has pulled far enough down that when they let go then the refresh will\n     * happen. If they let go and the number is less than `1`, then the\n     * refresh will not happen, and the content will return to it's original\n     * position.\n     */\n\n  }, {\n    key: \"getProgress\",\n    value: function getProgress() {\n      return Promise.resolve(this.progress);\n    }\n  }, {\n    key: \"canStart\",\n    value: function canStart() {\n      if (!this.scrollEl) {\n        return false;\n      }\n\n      if (this.state !== 1\n      /* Inactive */\n      ) {\n          return false;\n        } // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n\n\n      if (this.scrollEl.scrollTop > 0) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      this.progress = 0;\n      this.state = 1\n      /* Inactive */\n      ;\n    }\n  }, {\n    key: \"onMove\",\n    value: function onMove(detail) {\n      if (!this.scrollEl) {\n        return;\n      } // this method can get called like a bazillion times per second,\n      // so it's built to be as efficient as possible, and does its\n      // best to do any DOM read/writes only when absolutely necessary\n      // if multi-touch then get out immediately\n\n\n      var ev = detail.event;\n\n      if (ev.touches && ev.touches.length > 1) {\n        return;\n      } // do nothing if it's actively refreshing\n      // or it's in the way of closing\n      // or this was never a startY\n\n\n      if ((this.state & 56\n      /* _BUSY_ */\n      ) !== 0) {\n        return;\n      }\n\n      var pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n      var deltaY = detail.deltaY * pullFactor; // don't bother if they're scrolling up\n      // and have not already started dragging\n\n      if (deltaY <= 0) {\n        // the current Y is higher than the starting Y\n        // so they scrolled up enough to be ignored\n        this.progress = 0;\n        this.state = 1\n        /* Inactive */\n        ;\n\n        if (this.appliedStyles) {\n          // reset the styles only if they were applied\n          this.setCss(0, '', false, '');\n          return;\n        }\n\n        return;\n      }\n\n      if (this.state === 1\n      /* Inactive */\n      ) {\n          // this refresh is not already actively pulling down\n          // get the content's scrollTop\n          var scrollHostScrollTop = this.scrollEl.scrollTop; // if the scrollTop is greater than zero then it's\n          // not possible to pull the content down yet\n\n          if (scrollHostScrollTop > 0) {\n            this.progress = 0;\n            return;\n          } // content scrolled all the way to the top, and dragging down\n\n\n          this.state = 2\n          /* Pulling */\n          ;\n        } // prevent native scroll events\n\n\n      if (ev.cancelable) {\n        ev.preventDefault();\n      } // the refresher is actively pulling at this point\n      // move the scroll element within the content element\n\n\n      this.setCss(deltaY, '0ms', true, '');\n\n      if (deltaY === 0) {\n        // don't continue if there's no delta yet\n        this.progress = 0;\n        return;\n      }\n\n      var pullMin = this.pullMin; // set pull progress\n\n      this.progress = deltaY / pullMin; // emit \"start\" if it hasn't started yet\n\n      if (!this.didStart) {\n        this.didStart = true;\n        this.ionStart.emit();\n      } // emit \"pulling\" on every move\n\n\n      this.ionPull.emit(); // do nothing if the delta is less than the pull threshold\n\n      if (deltaY < pullMin) {\n        // ensure it stays in the pulling state, cuz its not ready yet\n        this.state = 2\n        /* Pulling */\n        ;\n        return;\n      }\n\n      if (deltaY > this.pullMax) {\n        // they pulled farther than the max, so kick off the refresh\n        this.beginRefresh();\n        return;\n      } // pulled farther than the pull min!!\n      // it is now in the `ready` state!!\n      // if they let go then it'll refresh, kerpow!!\n\n\n      this.state = 4\n      /* Ready */\n      ;\n      return;\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd() {\n      // only run in a zone when absolutely necessary\n      if (this.state === 4\n      /* Ready */\n      ) {\n          // they pulled down far enough, so it's ready to refresh\n          this.beginRefresh();\n        } else if (this.state === 2\n      /* Pulling */\n      ) {\n          // they were pulling down, but didn't pull down far enough\n          // set the content back to it's original location\n          // and close the refresher\n          // set that the refresh is actively cancelling\n          this.cancel();\n        }\n    }\n  }, {\n    key: \"beginRefresh\",\n    value: function beginRefresh() {\n      // assumes we're already back in a zone\n      // they pulled down far enough, so it's ready to refresh\n      this.state = 8\n      /* Refreshing */\n      ; // place the content in a hangout position while it thinks\n\n      this.setCss(this.pullMin, this.snapbackDuration, true, ''); // emit \"refresh\" because it was pulled down far enough\n      // and they let go to begin refreshing\n\n      this.ionRefresh.emit({\n        complete: this.complete.bind(this)\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(state, delay) {\n      var _this6 = this;\n\n      // create fallback timer incase something goes wrong with transitionEnd event\n      setTimeout(function () {\n        _this6.state = 1\n        /* Inactive */\n        ;\n        _this6.progress = 0;\n        _this6.didStart = false;\n\n        _this6.setCss(0, '0ms', false, '');\n      }, 600); // reset set the styles on the scroll element\n      // set that the refresh is actively cancelling/completing\n\n      this.state = state;\n      this.setCss(0, this.closeDuration, true, delay); // TODO: stop gesture\n    }\n  }, {\n    key: \"setCss\",\n    value: function setCss(y, duration, overflowVisible, delay) {\n      var _this7 = this;\n\n      if (this.nativeRefresher) {\n        return;\n      }\n\n      this.appliedStyles = y > 0;\n      writeTask(function () {\n        if (_this7.scrollEl && _this7.backgroundContentEl) {\n          var scrollStyle = _this7.scrollEl.style;\n          var backgroundStyle = _this7.backgroundContentEl.style;\n          scrollStyle.transform = backgroundStyle.transform = y > 0 ? \"translateY(\".concat(y, \"px) translateZ(0px)\") : '';\n          scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n          scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n          scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _class;\n\n      var mode = getIonMode(this);\n      return h(Host, {\n        slot: \"fixed\",\n        class: (_class = {}, _defineProperty(_class, mode, true), _defineProperty(_class, \"refresher-\".concat(mode), true), _defineProperty(_class, 'refresher-native', this.nativeRefresher), _defineProperty(_class, 'refresher-active', this.state !== 1), _defineProperty(_class, 'refresher-pulling', this.state === 2), _defineProperty(_class, 'refresher-ready', this.state === 4), _defineProperty(_class, 'refresher-refreshing', this.state === 8), _defineProperty(_class, 'refresher-cancelling', this.state === 16), _defineProperty(_class, 'refresher-completing', this.state === 32), _class)\n      });\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"disabled\": [\"disabledChanged\"]\n      };\n    }\n  }]);\n\n  return Refresher;\n}();\n\nRefresher.style = {\n  /*STENCIL:MODE:ios*/\n  ios: refresherIosCss,\n\n  /*STENCIL:MODE:md*/\n  md: refresherMdCss\n};\n\nvar RefresherContent = /*#__PURE__*/function () {\n  function RefresherContent(hostRef) {\n    _classCallCheck(this, RefresherContent);\n\n    registerInstance(this, hostRef);\n  }\n\n  _createClass(RefresherContent, [{\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      if (this.pullingIcon === undefined) {\n        var mode = getIonMode(this);\n        var overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n        this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n      }\n\n      if (this.refreshingSpinner === undefined) {\n        var _mode = getIonMode(this);\n\n        this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', _mode === 'ios' ? 'lines' : 'circular'));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var pullingIcon = this.pullingIcon;\n      var hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n      var mode = getIonMode(this);\n      return h(Host, {\n        class: mode\n      }, h(\"div\", {\n        class: \"refresher-pulling\"\n      }, this.pullingIcon && hasSpinner && h(\"div\", {\n        class: \"refresher-pulling-icon\"\n      }, h(\"div\", {\n        class: \"spinner-arrow-container\"\n      }, h(\"ion-spinner\", {\n        name: this.pullingIcon,\n        paused: true\n      }), mode === 'md' && this.pullingIcon === 'circular' && h(\"div\", {\n        class: \"arrow-container\"\n      }, h(\"ion-icon\", {\n        name: \"caret-back-sharp\"\n      })))), this.pullingIcon && !hasSpinner && h(\"div\", {\n        class: \"refresher-pulling-icon\"\n      }, h(\"ion-icon\", {\n        icon: this.pullingIcon,\n        lazy: false\n      })), this.pullingText && h(\"div\", {\n        class: \"refresher-pulling-text\",\n        innerHTML: sanitizeDOMString(this.pullingText)\n      })), h(\"div\", {\n        class: \"refresher-refreshing\"\n      }, this.refreshingSpinner && h(\"div\", {\n        class: \"refresher-refreshing-icon\"\n      }, h(\"ion-spinner\", {\n        name: this.refreshingSpinner\n      })), this.refreshingText && h(\"div\", {\n        class: \"refresher-refreshing-text\",\n        innerHTML: sanitizeDOMString(this.refreshingText)\n      })));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return getElement(this);\n    }\n  }]);\n\n  return RefresherContent;\n}();\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };","map":{"version":3,"sources":["/Users/mac/Documents/WorkSpace/Pfizer/Capacitor/MyCapacitor/node_modules/@ionic/core/dist/esm-es5/ion-refresher_2-md.entry.js"],"names":["w","writeTask","r","registerInstance","d","createEvent","f","readTask","h","e","getElement","H","Host","i","isPlatform","b","getIonMode","c","config","clamp","raf","createAnimation","g","getTimeGivenProgression","s","sanitizeDOMString","S","SPINNERS","HapticEngine","getEngine","win","window","TapticEngine","Capacitor","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","hapticImpact","getRefresherAnimationType","contentEl","previousSibling","previousElementSibling","hasHeader","tagName","createPullingAnimation","type","pullingSpinner","createScaleAnimation","createTranslateAnimation","createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","height","clientHeight","spinnerAnimation","createSnapBackAnimation","fromTo","setSpinnerOpacity","setProperty","toString","handleScrollWhilePulling","ticks","currentTickToShow","forEach","el","handleScrollWhileRefreshing","lastVelocityY","translateElement","value","Promise","resolve","trans","transitionEndAsync","undefined","removeProperty","shouldUseNativeRefresher","referenceEl","mode","refreshingSpinner","webkitOverflowScrolling","transitionEnd","callback","unRegTrans","opts","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","refresherIosCss","refresherMdCss","Refresher","hostRef","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","ionRefresh","ionPull","ionStart","gesture","enable","useNativeRefresher","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","ani","destroy","elementToTransform","querySelectorAll","MAX_PULL","NUM_TICKS","length","scrollTop","refresherHeight","ratio","emit","Math","abs","pullAmount","floor","shouldShowRefreshingSpinner","beginRefresh","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","velocityY","onEnd","resetNativeRefresher","disabledChanged","refreshingCircle","canStart","data","animation","cancelled","animationType","progressStart","push","deltaY","progressStep","progressEnd","onFinish","snapBackAnimation","play","setupiOSNativeRefresher","setupMDNativeRefresher","checkNativeRefresher","getAttribute","console","error","getScrollElement","backgroundContentEl","close","detail","event","touches","Number","isNaN","setCss","scrollHostScrollTop","cancelable","preventDefault","cancel","complete","bind","delay","setTimeout","y","overflowVisible","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","slot","class","ios","md","RefresherContent","pullingIcon","overflowRefresher","get","hasSpinner","name","paused","icon","lazy","pullingText","innerHTML","refreshingText","ion_refresher","ion_refresher_content"],"mappings":"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","sourcesContent":["import { w as writeTask, r as registerInstance, d as createEvent, f as readTask, h, e as getElement, H as Host } from './index-2cd7e630.js';\nimport { i as isPlatform, b as getIonMode, c as config } from './ionic-global-a175fa73.js';\nimport './utils-35117408.js';\nimport './index.mjs';\nimport { c as clamp, r as raf } from './helpers-d8b49b57.js';\nimport { c as createAnimation } from './animation-f72ade61.js';\nimport './index-157155ee.js';\nimport './ios.transition-11c6a0fa.js';\nimport './md.transition-3e9127c1.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\nimport './index-e44ebcc6.js';\nimport './hardware-back-button-784b7e3c.js';\nimport './index-9af8638a.js';\nimport './overlays-998692a2.js';\nimport { s as sanitizeDOMString } from './index-729ec402.js';\nimport { S as SPINNERS } from './spinner-configs-c78e170e.js';\n\nconst HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    }\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nconst getRefresherAnimationType = (contentEl) => {\n    const previousSibling = contentEl.previousElementSibling;\n    const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n    return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner) => {\n    return type === 'scale' ? createScaleAnimation(pullingSpinner) : createTranslateAnimation(pullingSpinner);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n    const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n    const circle = spinner.shadowRoot.querySelector('circle');\n    const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n    const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n    const arrow = (arrowContainer) ? arrowContainer.querySelector('ion-icon') : null;\n    const baseAnimation = createAnimation()\n        .duration(1000)\n        .easing('ease-out');\n    const spinnerArrowContainerAnimation = createAnimation()\n        .addElement(spinnerArrowContainer)\n        .keyframes([\n        { offset: 0, opacity: '0.3' },\n        { offset: 0.45, opacity: '0.3' },\n        { offset: 0.55, opacity: '1' },\n        { offset: 1, opacity: '1' }\n    ]);\n    const circleInnerAnimation = createAnimation()\n        .addElement(circle)\n        .keyframes([\n        { offset: 0, strokeDasharray: '1px, 200px' },\n        { offset: 0.20, strokeDasharray: '1px, 200px' },\n        { offset: 0.55, strokeDasharray: '100px, 200px' },\n        { offset: 1, strokeDasharray: '100px, 200px' }\n    ]);\n    const circleOuterAnimation = createAnimation()\n        .addElement(spinner)\n        .keyframes([\n        { offset: 0, transform: 'rotate(-90deg)' },\n        { offset: 1, transform: 'rotate(210deg)' }\n    ]);\n    /**\n     * Only add arrow animation if present\n     * this allows users to customize the spinners\n     * without errors being thrown\n     */\n    if (arrowContainer && arrow) {\n        const arrowContainerAnimation = createAnimation()\n            .addElement(arrowContainer)\n            .keyframes([\n            { offset: 0, transform: 'rotate(0deg)' },\n            { offset: 0.30, transform: 'rotate(0deg)' },\n            { offset: 0.55, transform: 'rotate(280deg)' },\n            { offset: 1, transform: 'rotate(400deg)' }\n        ]);\n        const arrowAnimation = createAnimation()\n            .addElement(arrow)\n            .keyframes([\n            { offset: 0, transform: 'translateX(2px) scale(0)' },\n            { offset: 0.30, transform: 'translateX(2px) scale(0)' },\n            { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n            { offset: 1, transform: 'translateX(-1.5px) scale(1)' }\n        ]);\n        baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n    }\n    return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon) => {\n    const height = pullingRefresherIcon.clientHeight;\n    const spinnerAnimation = createAnimation()\n        .addElement(pullingRefresherIcon)\n        .keyframes([\n        { offset: 0, transform: `scale(0) translateY(-${height + 20}px)` },\n        { offset: 1, transform: 'scale(1) translateY(100px)' }\n    ]);\n    return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon) => {\n    const height = pullingRefresherIcon.clientHeight;\n    const spinnerAnimation = createAnimation()\n        .addElement(pullingRefresherIcon)\n        .keyframes([\n        { offset: 0, transform: `translateY(-${height + 20}px)` },\n        { offset: 1, transform: 'translateY(100px)' }\n    ]);\n    return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n    return createAnimation()\n        .duration(125)\n        .addElement(pullingRefresherIcon)\n        .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n    spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (spinner, ticks, opacity, currentTickToShow) => {\n    writeTask(() => {\n        setSpinnerOpacity(spinner, opacity);\n        ticks.forEach((el, i) => el.style.setProperty('opacity', (i <= currentTickToShow) ? '0.99' : '0'));\n    });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n    writeTask(() => {\n        // If user pulls down quickly, the spinner should spin faster\n        spinner.style.setProperty('--refreshing-rotation-duration', (lastVelocityY >= 1.0) ? '0.5s' : '2s');\n        spinner.style.setProperty('opacity', '1');\n    });\n};\nconst translateElement = (el, value) => {\n    if (!el) {\n        return Promise.resolve();\n    }\n    const trans = transitionEndAsync(el);\n    writeTask(() => {\n        el.style.setProperty('transition', '0.2s all ease-out');\n        if (value === undefined) {\n            el.style.removeProperty('transform');\n        }\n        else {\n            el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n        }\n    });\n    return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = (referenceEl, mode) => {\n    const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    return (pullingSpinner !== null &&\n        refreshingSpinner !== null &&\n        ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n            mode === 'md'));\n};\nconst transitionEndAsync = (el) => {\n    return new Promise(resolve => {\n        transitionEnd(el, resolve);\n    });\n};\nconst transitionEnd = (el, callback) => {\n    let unRegTrans;\n    const opts = { passive: true };\n    const unregister = () => {\n        if (unRegTrans) {\n            unRegTrans();\n        }\n    };\n    const onTransitionEnd = (ev) => {\n        if (el === ev.target) {\n            unregister();\n            callback(ev);\n        }\n    };\n    if (el) {\n        el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n        el.addEventListener('transitionend', onTransitionEnd, opts);\n        unRegTrans = () => {\n            el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n            el.removeEventListener('transitionend', onTransitionEnd, opts);\n        };\n    }\n    return unregister;\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid #ececec;background:white;-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.appliedStyles = false;\n        this.didStart = false;\n        this.progress = 0;\n        this.pointerDown = false;\n        this.needsCompletion = false;\n        this.didRefresh = false;\n        this.lastVelocityY = 0;\n        this.animations = [];\n        this.nativeRefresher = false;\n        /**\n         * The current state which the refresher is in. The refresher's states include:\n         *\n         * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n         * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n         * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n         * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n         * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n         * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n         */\n        this.state = 1 /* Inactive */;\n        /**\n         * The minimum distance the user must pull down until the\n         * refresher will go into the `refreshing` state.\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.pullMin = 60;\n        /**\n         * The maximum distance of the pull until the refresher\n         * will automatically go into the `refreshing` state.\n         * Defaults to the result of `pullMin + 60`.\n         * Does not apply when  the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.pullMax = this.pullMin + 60;\n        /**\n         * Time it takes to close the refresher.\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.closeDuration = '280ms';\n        /**\n         * Time it takes the refresher to to snap back to the `refreshing` state.\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.snapbackDuration = '280ms';\n        /**\n         * How much to multiply the pull speed by. To slow the pull animation down,\n         * pass a number less than `1`. To speed up the pull, pass a number greater\n         * than `1`. The default value is `1` which is equal to the speed of the cursor.\n         * If a negative value is passed in, the factor will be `1` instead.\n         *\n         * For example: If the value passed is `1.2` and the content is dragged by\n         * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n         * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n         * will be `8` pixels, less than the amount the cursor has moved.\n         *\n         * Does not apply when the refresher content uses a spinner,\n         * enabling the native refresher.\n         */\n        this.pullFactor = 1;\n        /**\n         * If `true`, the refresher will be hidden.\n         */\n        this.disabled = false;\n        this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n        this.ionPull = createEvent(this, \"ionPull\", 7);\n        this.ionStart = createEvent(this, \"ionStart\", 7);\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    checkNativeRefresher() {\n        const useNativeRefresher = shouldUseNativeRefresher(this.el, getIonMode(this));\n        if (useNativeRefresher && !this.nativeRefresher) {\n            const contentEl = this.el.closest('ion-content');\n            this.setupNativeRefresher(contentEl);\n        }\n        else if (!useNativeRefresher) {\n            this.destroyNativeRefresher();\n        }\n    }\n    destroyNativeRefresher() {\n        if (this.scrollEl && this.scrollListenerCallback) {\n            this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n            this.scrollListenerCallback = undefined;\n        }\n        this.nativeRefresher = false;\n    }\n    async resetNativeRefresher(el, state) {\n        this.state = state;\n        if (getIonMode(this) === 'ios') {\n            await translateElement(el, undefined);\n        }\n        else {\n            await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'));\n        }\n        this.didRefresh = false;\n        this.needsCompletion = false;\n        this.pointerDown = false;\n        this.animations.forEach(ani => ani.destroy());\n        this.animations = [];\n        this.progress = 0;\n        this.state = 1 /* Inactive */;\n    }\n    async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n        this.elementToTransform = this.scrollEl;\n        const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n        const MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        const NUM_TICKS = ticks.length;\n        writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n        this.scrollListenerCallback = () => {\n            // If pointer is not on screen or refresher is not active, ignore scroll\n            if (!this.pointerDown && this.state === 1 /* Inactive */) {\n                return;\n            }\n            readTask(() => {\n                // PTR should only be active when overflow scrolling at the top\n                const scrollTop = this.scrollEl.scrollTop;\n                const refresherHeight = this.el.clientHeight;\n                if (scrollTop > 0) {\n                    /**\n                     * If refresher is refreshing and user tries to scroll\n                     * progressively fade refresher out/in\n                     */\n                    if (this.state === 8 /* Refreshing */) {\n                        const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n                        writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n                        return;\n                    }\n                    writeTask(() => setSpinnerOpacity(pullingSpinner, 0));\n                    return;\n                }\n                if (this.pointerDown) {\n                    if (!this.didStart) {\n                        this.didStart = true;\n                        this.ionStart.emit();\n                    }\n                    // emit \"pulling\" on every move\n                    if (this.pointerDown) {\n                        this.ionPull.emit();\n                    }\n                }\n                // delay showing the next tick marks until user has pulled 30px\n                const opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n                const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n                const currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n                const shouldShowRefreshingSpinner = this.state === 8 /* Refreshing */ || currentTickToShow === NUM_TICKS - 1;\n                if (shouldShowRefreshingSpinner) {\n                    if (this.pointerDown) {\n                        handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n                    }\n                    if (!this.didRefresh) {\n                        this.beginRefresh();\n                        this.didRefresh = true;\n                        hapticImpact({ style: 'light' });\n                        /**\n                         * Translate the content element otherwise when pointer is removed\n                         * from screen the scroll content will bounce back over the refresher\n                         */\n                        if (!this.pointerDown) {\n                            translateElement(this.elementToTransform, `${refresherHeight}px`);\n                        }\n                    }\n                }\n                else {\n                    this.state = 2 /* Pulling */;\n                    handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n                }\n            });\n        };\n        this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n        this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n            el: this.scrollEl,\n            gestureName: 'refresher',\n            gesturePriority: 10,\n            direction: 'y',\n            threshold: 5,\n            onStart: () => {\n                this.pointerDown = true;\n                if (!this.didRefresh) {\n                    translateElement(this.elementToTransform, '0px');\n                }\n            },\n            onMove: ev => {\n                this.lastVelocityY = ev.velocityY;\n            },\n            onEnd: () => {\n                this.pointerDown = false;\n                this.didStart = false;\n                if (this.needsCompletion) {\n                    this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */);\n                    this.needsCompletion = false;\n                }\n                else if (this.didRefresh) {\n                    readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n                }\n            },\n        });\n        this.disabledChanged();\n    }\n    async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n        const circle = pullingSpinner.shadowRoot.querySelector('circle');\n        const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n        const refreshingCircle = refreshingSpinner.shadowRoot.querySelector('circle');\n        if (circle !== null && refreshingCircle !== null) {\n            writeTask(() => {\n                circle.style.setProperty('animation', 'none');\n                // This lines up the animation on the refreshing spinner with the pulling spinner\n                refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n                refreshingCircle.style.setProperty('animation-delay', '-655ms');\n            });\n        }\n        this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n            el: this.scrollEl,\n            gestureName: 'refresher',\n            gesturePriority: 10,\n            direction: 'y',\n            threshold: 5,\n            canStart: () => this.state !== 8 /* Refreshing */ && this.state !== 32 /* Completing */ && this.scrollEl.scrollTop === 0,\n            onStart: (ev) => {\n                ev.data = { animation: undefined, didStart: false, cancelled: false };\n            },\n            onMove: (ev) => {\n                if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n                    ev.data.cancelled = true;\n                    return;\n                }\n                if (!ev.data.didStart) {\n                    ev.data.didStart = true;\n                    this.state = 2 /* Pulling */;\n                    writeTask(() => {\n                        const animationType = getRefresherAnimationType(contentEl);\n                        const animation = createPullingAnimation(animationType, pullingRefresherIcon);\n                        ev.data.animation = animation;\n                        this.scrollEl.style.setProperty('--overflow', 'hidden');\n                        animation.progressStart(false, 0);\n                        this.ionStart.emit();\n                        this.animations.push(animation);\n                    });\n                    return;\n                }\n                // Since we are using an easing curve, slow the gesture tracking down a bit\n                this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n                ev.data.animation.progressStep(this.progress);\n                this.ionPull.emit();\n            },\n            onEnd: (ev) => {\n                if (!ev.data.didStart) {\n                    return;\n                }\n                writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n                if (this.progress <= 0.4) {\n                    this.gesture.enable(false);\n                    ev.data.animation\n                        .progressEnd(0, this.progress, 500)\n                        .onFinish(() => {\n                        this.animations.forEach(ani => ani.destroy());\n                        this.animations = [];\n                        this.gesture.enable(true);\n                        this.state = 1 /* Inactive */;\n                    });\n                    return;\n                }\n                const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n                const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n                this.animations.push(snapBackAnimation);\n                writeTask(async () => {\n                    pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${(progress * 100)}px`);\n                    ev.data.animation.progressEnd();\n                    await snapBackAnimation.play();\n                    this.beginRefresh();\n                    ev.data.animation.destroy();\n                });\n            }\n        });\n        this.disabledChanged();\n    }\n    async setupNativeRefresher(contentEl) {\n        if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n            return;\n        }\n        this.nativeRefresher = true;\n        const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n        const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n        if (getIonMode(this) === 'ios') {\n            this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n        }\n        else {\n            this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n        }\n    }\n    componentDidUpdate() {\n        this.checkNativeRefresher();\n    }\n    async connectedCallback() {\n        if (this.el.getAttribute('slot') !== 'fixed') {\n            console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n            return;\n        }\n        const contentEl = this.el.closest('ion-content');\n        if (!contentEl) {\n            console.error('<ion-refresher> must be used inside an <ion-content>');\n            return;\n        }\n        this.scrollEl = await contentEl.getScrollElement();\n        this.backgroundContentEl = contentEl.shadowRoot.querySelector('#background-content');\n        if (shouldUseNativeRefresher(this.el, getIonMode(this))) {\n            this.setupNativeRefresher(contentEl);\n        }\n        else {\n            this.gesture = (await import('./index-e44ebcc6.js')).createGesture({\n                el: contentEl,\n                gestureName: 'refresher',\n                gesturePriority: 10,\n                direction: 'y',\n                threshold: 20,\n                passive: false,\n                canStart: () => this.canStart(),\n                onStart: () => this.onStart(),\n                onMove: ev => this.onMove(ev),\n                onEnd: () => this.onEnd(),\n            });\n            this.disabledChanged();\n        }\n    }\n    disconnectedCallback() {\n        this.destroyNativeRefresher();\n        this.scrollEl = undefined;\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    /**\n     * Call `complete()` when your async operation has completed.\n     * For example, the `refreshing` state is while the app is performing\n     * an asynchronous operation, such as receiving more data from an\n     * AJAX request. Once the data has been received, you then call this\n     * method to signify that the refreshing has completed and to close\n     * the refresher. This method also changes the refresher's state from\n     * `refreshing` to `completing`.\n     */\n    async complete() {\n        if (this.nativeRefresher) {\n            this.needsCompletion = true;\n            // Do not reset scroll el until user removes pointer from screen\n            if (!this.pointerDown) {\n                raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */)));\n            }\n        }\n        else {\n            this.close(32 /* Completing */, '120ms');\n        }\n    }\n    /**\n     * Changes the refresher's state from `refreshing` to `cancelling`.\n     */\n    async cancel() {\n        if (this.nativeRefresher) {\n            // Do not reset scroll el until user removes pointer from screen\n            if (!this.pointerDown) {\n                raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* Cancelling */)));\n            }\n        }\n        else {\n            this.close(16 /* Cancelling */, '');\n        }\n    }\n    /**\n     * A number representing how far down the user has pulled.\n     * The number `0` represents the user hasn't pulled down at all. The\n     * number `1`, and anything greater than `1`, represents that the user\n     * has pulled far enough down that when they let go then the refresh will\n     * happen. If they let go and the number is less than `1`, then the\n     * refresh will not happen, and the content will return to it's original\n     * position.\n     */\n    getProgress() {\n        return Promise.resolve(this.progress);\n    }\n    canStart() {\n        if (!this.scrollEl) {\n            return false;\n        }\n        if (this.state !== 1 /* Inactive */) {\n            return false;\n        }\n        // if the scrollTop is greater than zero then it's\n        // not possible to pull the content down yet\n        if (this.scrollEl.scrollTop > 0) {\n            return false;\n        }\n        return true;\n    }\n    onStart() {\n        this.progress = 0;\n        this.state = 1 /* Inactive */;\n    }\n    onMove(detail) {\n        if (!this.scrollEl) {\n            return;\n        }\n        // this method can get called like a bazillion times per second,\n        // so it's built to be as efficient as possible, and does its\n        // best to do any DOM read/writes only when absolutely necessary\n        // if multi-touch then get out immediately\n        const ev = detail.event;\n        if (ev.touches && ev.touches.length > 1) {\n            return;\n        }\n        // do nothing if it's actively refreshing\n        // or it's in the way of closing\n        // or this was never a startY\n        if ((this.state & 56 /* _BUSY_ */) !== 0) {\n            return;\n        }\n        const pullFactor = (Number.isNaN(this.pullFactor) || this.pullFactor < 0) ? 1 : this.pullFactor;\n        const deltaY = detail.deltaY * pullFactor;\n        // don't bother if they're scrolling up\n        // and have not already started dragging\n        if (deltaY <= 0) {\n            // the current Y is higher than the starting Y\n            // so they scrolled up enough to be ignored\n            this.progress = 0;\n            this.state = 1 /* Inactive */;\n            if (this.appliedStyles) {\n                // reset the styles only if they were applied\n                this.setCss(0, '', false, '');\n                return;\n            }\n            return;\n        }\n        if (this.state === 1 /* Inactive */) {\n            // this refresh is not already actively pulling down\n            // get the content's scrollTop\n            const scrollHostScrollTop = this.scrollEl.scrollTop;\n            // if the scrollTop is greater than zero then it's\n            // not possible to pull the content down yet\n            if (scrollHostScrollTop > 0) {\n                this.progress = 0;\n                return;\n            }\n            // content scrolled all the way to the top, and dragging down\n            this.state = 2 /* Pulling */;\n        }\n        // prevent native scroll events\n        if (ev.cancelable) {\n            ev.preventDefault();\n        }\n        // the refresher is actively pulling at this point\n        // move the scroll element within the content element\n        this.setCss(deltaY, '0ms', true, '');\n        if (deltaY === 0) {\n            // don't continue if there's no delta yet\n            this.progress = 0;\n            return;\n        }\n        const pullMin = this.pullMin;\n        // set pull progress\n        this.progress = deltaY / pullMin;\n        // emit \"start\" if it hasn't started yet\n        if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n        }\n        // emit \"pulling\" on every move\n        this.ionPull.emit();\n        // do nothing if the delta is less than the pull threshold\n        if (deltaY < pullMin) {\n            // ensure it stays in the pulling state, cuz its not ready yet\n            this.state = 2 /* Pulling */;\n            return;\n        }\n        if (deltaY > this.pullMax) {\n            // they pulled farther than the max, so kick off the refresh\n            this.beginRefresh();\n            return;\n        }\n        // pulled farther than the pull min!!\n        // it is now in the `ready` state!!\n        // if they let go then it'll refresh, kerpow!!\n        this.state = 4 /* Ready */;\n        return;\n    }\n    onEnd() {\n        // only run in a zone when absolutely necessary\n        if (this.state === 4 /* Ready */) {\n            // they pulled down far enough, so it's ready to refresh\n            this.beginRefresh();\n        }\n        else if (this.state === 2 /* Pulling */) {\n            // they were pulling down, but didn't pull down far enough\n            // set the content back to it's original location\n            // and close the refresher\n            // set that the refresh is actively cancelling\n            this.cancel();\n        }\n    }\n    beginRefresh() {\n        // assumes we're already back in a zone\n        // they pulled down far enough, so it's ready to refresh\n        this.state = 8 /* Refreshing */;\n        // place the content in a hangout position while it thinks\n        this.setCss(this.pullMin, this.snapbackDuration, true, '');\n        // emit \"refresh\" because it was pulled down far enough\n        // and they let go to begin refreshing\n        this.ionRefresh.emit({\n            complete: this.complete.bind(this)\n        });\n    }\n    close(state, delay) {\n        // create fallback timer incase something goes wrong with transitionEnd event\n        setTimeout(() => {\n            this.state = 1 /* Inactive */;\n            this.progress = 0;\n            this.didStart = false;\n            this.setCss(0, '0ms', false, '');\n        }, 600);\n        // reset set the styles on the scroll element\n        // set that the refresh is actively cancelling/completing\n        this.state = state;\n        this.setCss(0, this.closeDuration, true, delay);\n        // TODO: stop gesture\n    }\n    setCss(y, duration, overflowVisible, delay) {\n        if (this.nativeRefresher) {\n            return;\n        }\n        this.appliedStyles = (y > 0);\n        writeTask(() => {\n            if (this.scrollEl && this.backgroundContentEl) {\n                const scrollStyle = this.scrollEl.style;\n                const backgroundStyle = this.backgroundContentEl.style;\n                scrollStyle.transform = backgroundStyle.transform = ((y > 0) ? `translateY(${y}px) translateZ(0px)` : '');\n                scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n                scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n                scrollStyle.overflow = (overflowVisible ? 'hidden' : '');\n            }\n        });\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { slot: \"fixed\", class: {\n                [mode]: true,\n                // Used internally for styling\n                [`refresher-${mode}`]: true,\n                'refresher-native': this.nativeRefresher,\n                'refresher-active': this.state !== 1 /* Inactive */,\n                'refresher-pulling': this.state === 2 /* Pulling */,\n                'refresher-ready': this.state === 4 /* Ready */,\n                'refresher-refreshing': this.state === 8 /* Refreshing */,\n                'refresher-cancelling': this.state === 16 /* Cancelling */,\n                'refresher-completing': this.state === 32 /* Completing */,\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n};\nRefresher.style = {\n    /*STENCIL:MODE:ios*/ ios: refresherIosCss,\n    /*STENCIL:MODE:md*/ md: refresherMdCss\n};\n\nconst RefresherContent = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    componentWillLoad() {\n        if (this.pullingIcon === undefined) {\n            const mode = getIonMode(this);\n            const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n            this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n        }\n        if (this.refreshingSpinner === undefined) {\n            const mode = getIonMode(this);\n            this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n        }\n    }\n    render() {\n        const pullingIcon = this.pullingIcon;\n        const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n        const mode = getIonMode(this);\n        return (h(Host, { class: mode }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner &&\n            h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"div\", { class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' &&\n                h(\"div\", { class: \"arrow-container\" }, h(\"ion-icon\", { name: \"caret-back-sharp\" })))), this.pullingIcon && !hasSpinner &&\n            h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false })), this.pullingText &&\n            h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(this.pullingText) })), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner &&\n            h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner })), this.refreshingText &&\n            h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(this.refreshingText) }))));\n    }\n    get el() { return getElement(this); }\n};\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n"]},"metadata":{},"sourceType":"module"}